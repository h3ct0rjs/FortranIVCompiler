Grammar:

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> command
Rule 4     statement -> INT command
Rule 5     command -> WRITE writeOption
Rule 6     command -> SUBROUTINE ID LPAREN varlist RPAREN
Rule 7     command -> STOP stopOption
Rule 8     command -> RETURN
Rule 9     command -> READ readOption
Rule 10    command -> REAL exprlist
Rule 11    command -> PAUSE pauseOption
Rule 12    command -> INTEGER exprlist
Rule 13    command -> IF LPAREN relexpr RPAREN ifOption
Rule 14    command -> GOTO gotoOption
Rule 15    command -> FUNCTION ID LPAREN varlist RPAREN
Rule 16    command -> FORMAT
Rule 17    command -> END
Rule 18    command -> DO doOption
Rule 19    command -> DIMMENSION dimmensionOption
Rule 20    command -> DATA dataOption
Rule 21    command -> CONTINUE
Rule 22    command -> CALL callOption
Rule 23    command -> variable ASSIGN expr
Rule 24    variable -> ID
Rule 25    variable -> ID LPAREN expr RPAREN
Rule 26    variable -> ID LPAREN expr , expr RPAREN
Rule 27    varlist -> variable
Rule 28    varlist -> varlist , variable  [precedence=left, level=9]
Rule 29    number -> MINUS RREAL  [precedence=right, level=6]
Rule 30    number -> MINUS INT  [precedence=right, level=6]
Rule 31    number -> RREAL
Rule 32    number -> INT
Rule 33    expr -> variable
Rule 34    expr -> RREAL
Rule 35    expr -> INT
Rule 36    expr -> LPAREN expr RPAREN
Rule 37    expr -> MINUS expr  [precedence=right, level=6]
Rule 38    expr -> expr EXPONENT expr  [precedence=left, level=4]
Rule 39    expr -> expr DIVIDE expr  [precedence=left, level=3]
Rule 40    expr -> expr TIMES expr  [precedence=left, level=3]
Rule 41    expr -> expr MINUS expr  [precedence=left, level=2]
Rule 42    expr -> expr PLUS expr  [precedence=left, level=2]
Rule 43    exprlist -> expr
Rule 44    exprlist -> exprlist , expr  [precedence=left, level=9]
Rule 45    relexpr -> expr
Rule 46    relexpr -> NOT relexpr  [precedence=right, level=7]
Rule 47    relexpr -> relexpr OR relexpr  [precedence=left, level=8]
Rule 48    relexpr -> relexpr AND relexpr  [precedence=left, level=8]
Rule 49    relexpr -> expr NE expr  [precedence=nonassoc, level=1]
Rule 50    relexpr -> expr EQ expr  [precedence=nonassoc, level=1]
Rule 51    relexpr -> expr GE expr  [precedence=nonassoc, level=1]
Rule 52    relexpr -> expr GT expr  [precedence=nonassoc, level=1]
Rule 53    relexpr -> expr LE expr  [precedence=nonassoc, level=1]
Rule 54    relexpr -> expr LT expr  [precedence=nonassoc, level=1]
Rule 55    callOption -> EXIT callExit
Rule 56    callOption -> ID LPAREN idList RPAREN
Rule 57    callExit -> empty
Rule 58    callExit -> LPAREN INT RPAREN
Rule 59    idList -> ID
Rule 60    idList -> idList , ID
Rule 61    dataOption -> varlist / datalist /  [precedence=left, level=5]
Rule 62    dataOption -> dataOption , varlist / datalist /  [precedence=left, level=5]
Rule 63    datalist -> number
Rule 64    datalist -> INT * number  [precedence=left, level=5]
Rule 65    datalist -> datalist , number  [precedence=left, level=9]
Rule 66    datalist -> datalist , INT * number  [precedence=left, level=5]
Rule 67    dimmensionOption -> ID LPAREN intlist RPAREN
Rule 68    dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN
Rule 69    intlist -> INT
Rule 70    intlist -> intlist , INT
Rule 71    doOption -> INT variable ASSIGN INT , INT
Rule 72    doOption -> INT variable ASSIGN INT , INT , INT
Rule 73    gotoOption -> LPAREN intlist RPAREN , variable  [precedence=left, level=9]
Rule 74    gotoOption -> INT
Rule 75    ifOption -> ifValue , ifValue , ifValue  [precedence=left, level=9]
Rule 76    ifValue -> ID
Rule 77    ifValue -> INT
Rule 78    pauseOption -> empty
Rule 79    pauseOption -> INT
Rule 80    stopOption -> empty
Rule 81    stopOption -> INT
Rule 82    readOption -> LPAREN optionsIO RPAREN
Rule 83    readOption -> LPAREN optionsIO RPAREN idList
Rule 84    writeOption -> LPAREN optionsIO RPAREN
Rule 85    writeOption -> LPAREN optionsIO RPAREN idList
Rule 86    optionsIO -> ID
Rule 87    optionsIO -> ID , INT
Rule 88    optionsIO -> INT
Rule 89    optionsIO -> INT , INT
Rule 90    empty -> <empty>

Terminals, with rules where they appear:

*                    : 64 66
,                    : 26 28 44 60 62 65 66 68 70 71 72 72 73 75 75 87 89
/                    : 61 61 62 62
AND                  : 48
ASSIGN               : 23 71 72
CALL                 : 22
CONTINUE             : 21
DATA                 : 20
DIMMENSION           : 19
DIVIDE               : 39
DO                   : 18
END                  : 17
EQ                   : 50
EXIT                 : 55
EXPONENT             : 38
FORMAT               : 16
FUNCTION             : 15
GE                   : 51
GOTO                 : 14
GT                   : 52
ID                   : 6 15 24 25 26 56 59 60 67 68 76 86 87
IF                   : 13
INT                  : 4 30 32 35 58 64 66 69 70 71 71 71 72 72 72 72 74 77 79 81 87 88 89 89
INTEGER              : 12
LE                   : 53
LPAREN               : 6 13 15 25 26 36 56 58 67 68 73 82 83 84 85
LT                   : 54
MINUS                : 29 30 37 41
NE                   : 49
NOT                  : 46
OR                   : 47
PAUSE                : 11
PLUS                 : 42
READ                 : 9
REAL                 : 10
RETURN               : 8
RPAREN               : 6 13 15 25 26 36 56 58 67 68 73 82 83 84 85
RREAL                : 29 31 34
STOP                 : 7
SUBROUTINE           : 6
TIMES                : 40
WRITE                : 5
error                : 

Nonterminals, with rules where they appear:

callExit             : 55
callOption           : 22
command              : 3 4
dataOption           : 20 62
datalist             : 61 62 65 66
dimmensionOption     : 19 68
doOption             : 18
empty                : 57 78 80
expr                 : 23 25 26 26 36 37 38 38 39 39 40 40 41 41 42 42 43 44 45 49 49 50 50 51 51 52 52 53 53 54 54
exprlist             : 10 12 44
gotoOption           : 14
idList               : 56 60 83 85
ifOption             : 13
ifValue              : 75 75 75
intlist              : 67 68 70 73
number               : 63 64 65 66
optionsIO            : 82 83 84 85
pauseOption          : 11
program              : 2 0
readOption           : 9
relexpr              : 13 46 47 47 48 48
statement            : 1 2
stopOption           : 7
variable             : 23 27 28 33 71 72 73
varlist              : 6 15 28 61 62
writeOption          : 5


state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . command
    (4) statement -> . INT command
    (5) command -> . WRITE writeOption
    (6) command -> . SUBROUTINE ID LPAREN varlist RPAREN
    (7) command -> . STOP stopOption
    (8) command -> . RETURN
    (9) command -> . READ readOption
    (10) command -> . REAL exprlist
    (11) command -> . PAUSE pauseOption
    (12) command -> . INTEGER exprlist
    (13) command -> . IF LPAREN relexpr RPAREN ifOption
    (14) command -> . GOTO gotoOption
    (15) command -> . FUNCTION ID LPAREN varlist RPAREN
    (16) command -> . FORMAT
    (17) command -> . END
    (18) command -> . DO doOption
    (19) command -> . DIMMENSION dimmensionOption
    (20) command -> . DATA dataOption
    (21) command -> . CONTINUE
    (22) command -> . CALL callOption
    (23) command -> . variable ASSIGN expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    INT             shift and go to state 4
    WRITE           shift and go to state 5
    SUBROUTINE      shift and go to state 6
    STOP            shift and go to state 8
    RETURN          shift and go to state 9
    READ            shift and go to state 10
    REAL            shift and go to state 11
    PAUSE           shift and go to state 12
    INTEGER         shift and go to state 13
    IF              shift and go to state 14
    GOTO            shift and go to state 15
    FUNCTION        shift and go to state 16
    FORMAT          shift and go to state 17
    END             shift and go to state 18
    DO              shift and go to state 19
    DIMMENSION      shift and go to state 20
    DATA            shift and go to state 21
    CONTINUE        shift and go to state 22
    CALL            shift and go to state 23
    ID              shift and go to state 7

    program                        shift and go to state 1
    statement                      shift and go to state 2
    command                        shift and go to state 3
    variable                       shift and go to state 24

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . command
    (4) statement -> . INT command
    (5) command -> . WRITE writeOption
    (6) command -> . SUBROUTINE ID LPAREN varlist RPAREN
    (7) command -> . STOP stopOption
    (8) command -> . RETURN
    (9) command -> . READ readOption
    (10) command -> . REAL exprlist
    (11) command -> . PAUSE pauseOption
    (12) command -> . INTEGER exprlist
    (13) command -> . IF LPAREN relexpr RPAREN ifOption
    (14) command -> . GOTO gotoOption
    (15) command -> . FUNCTION ID LPAREN varlist RPAREN
    (16) command -> . FORMAT
    (17) command -> . END
    (18) command -> . DO doOption
    (19) command -> . DIMMENSION dimmensionOption
    (20) command -> . DATA dataOption
    (21) command -> . CONTINUE
    (22) command -> . CALL callOption
    (23) command -> . variable ASSIGN expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    INT             shift and go to state 4
    WRITE           shift and go to state 5
    SUBROUTINE      shift and go to state 6
    STOP            shift and go to state 8
    RETURN          shift and go to state 9
    READ            shift and go to state 10
    REAL            shift and go to state 11
    PAUSE           shift and go to state 12
    INTEGER         shift and go to state 13
    IF              shift and go to state 14
    GOTO            shift and go to state 15
    FUNCTION        shift and go to state 16
    FORMAT          shift and go to state 17
    END             shift and go to state 18
    DO              shift and go to state 19
    DIMMENSION      shift and go to state 20
    DATA            shift and go to state 21
    CONTINUE        shift and go to state 22
    CALL            shift and go to state 23
    ID              shift and go to state 7

    statement                      shift and go to state 25
    command                        shift and go to state 3
    variable                       shift and go to state 24

state 2

    (1) program -> statement .
    INT             reduce using rule 1 (program -> statement .)
    WRITE           reduce using rule 1 (program -> statement .)
    SUBROUTINE      reduce using rule 1 (program -> statement .)
    STOP            reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    READ            reduce using rule 1 (program -> statement .)
    REAL            reduce using rule 1 (program -> statement .)
    PAUSE           reduce using rule 1 (program -> statement .)
    INTEGER         reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    GOTO            reduce using rule 1 (program -> statement .)
    FUNCTION        reduce using rule 1 (program -> statement .)
    FORMAT          reduce using rule 1 (program -> statement .)
    END             reduce using rule 1 (program -> statement .)
    DO              reduce using rule 1 (program -> statement .)
    DIMMENSION      reduce using rule 1 (program -> statement .)
    DATA            reduce using rule 1 (program -> statement .)
    CONTINUE        reduce using rule 1 (program -> statement .)
    CALL            reduce using rule 1 (program -> statement .)
    ID              reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> command .
    INT             reduce using rule 3 (statement -> command .)
    WRITE           reduce using rule 3 (statement -> command .)
    SUBROUTINE      reduce using rule 3 (statement -> command .)
    STOP            reduce using rule 3 (statement -> command .)
    RETURN          reduce using rule 3 (statement -> command .)
    READ            reduce using rule 3 (statement -> command .)
    REAL            reduce using rule 3 (statement -> command .)
    PAUSE           reduce using rule 3 (statement -> command .)
    INTEGER         reduce using rule 3 (statement -> command .)
    IF              reduce using rule 3 (statement -> command .)
    GOTO            reduce using rule 3 (statement -> command .)
    FUNCTION        reduce using rule 3 (statement -> command .)
    FORMAT          reduce using rule 3 (statement -> command .)
    END             reduce using rule 3 (statement -> command .)
    DO              reduce using rule 3 (statement -> command .)
    DIMMENSION      reduce using rule 3 (statement -> command .)
    DATA            reduce using rule 3 (statement -> command .)
    CONTINUE        reduce using rule 3 (statement -> command .)
    CALL            reduce using rule 3 (statement -> command .)
    ID              reduce using rule 3 (statement -> command .)
    $end            reduce using rule 3 (statement -> command .)


state 4

    (4) statement -> INT . command
    (5) command -> . WRITE writeOption
    (6) command -> . SUBROUTINE ID LPAREN varlist RPAREN
    (7) command -> . STOP stopOption
    (8) command -> . RETURN
    (9) command -> . READ readOption
    (10) command -> . REAL exprlist
    (11) command -> . PAUSE pauseOption
    (12) command -> . INTEGER exprlist
    (13) command -> . IF LPAREN relexpr RPAREN ifOption
    (14) command -> . GOTO gotoOption
    (15) command -> . FUNCTION ID LPAREN varlist RPAREN
    (16) command -> . FORMAT
    (17) command -> . END
    (18) command -> . DO doOption
    (19) command -> . DIMMENSION dimmensionOption
    (20) command -> . DATA dataOption
    (21) command -> . CONTINUE
    (22) command -> . CALL callOption
    (23) command -> . variable ASSIGN expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    WRITE           shift and go to state 5
    SUBROUTINE      shift and go to state 6
    STOP            shift and go to state 8
    RETURN          shift and go to state 9
    READ            shift and go to state 10
    REAL            shift and go to state 11
    PAUSE           shift and go to state 12
    INTEGER         shift and go to state 13
    IF              shift and go to state 14
    GOTO            shift and go to state 15
    FUNCTION        shift and go to state 16
    FORMAT          shift and go to state 17
    END             shift and go to state 18
    DO              shift and go to state 19
    DIMMENSION      shift and go to state 20
    DATA            shift and go to state 21
    CONTINUE        shift and go to state 22
    CALL            shift and go to state 23
    ID              shift and go to state 7

    command                        shift and go to state 26
    variable                       shift and go to state 24

state 5

    (5) command -> WRITE . writeOption
    (84) writeOption -> . LPAREN optionsIO RPAREN
    (85) writeOption -> . LPAREN optionsIO RPAREN idList
    LPAREN          shift and go to state 28

    writeOption                    shift and go to state 27

state 6

    (6) command -> SUBROUTINE . ID LPAREN varlist RPAREN
    ID              shift and go to state 29


state 7

    (24) variable -> ID .
    (25) variable -> ID . LPAREN expr RPAREN
    (26) variable -> ID . LPAREN expr , expr RPAREN
    ASSIGN          reduce using rule 24 (variable -> ID .)
    EXPONENT        reduce using rule 24 (variable -> ID .)
    DIVIDE          reduce using rule 24 (variable -> ID .)
    TIMES           reduce using rule 24 (variable -> ID .)
    MINUS           reduce using rule 24 (variable -> ID .)
    PLUS            reduce using rule 24 (variable -> ID .)
    ,               reduce using rule 24 (variable -> ID .)
    INT             reduce using rule 24 (variable -> ID .)
    WRITE           reduce using rule 24 (variable -> ID .)
    SUBROUTINE      reduce using rule 24 (variable -> ID .)
    STOP            reduce using rule 24 (variable -> ID .)
    RETURN          reduce using rule 24 (variable -> ID .)
    READ            reduce using rule 24 (variable -> ID .)
    REAL            reduce using rule 24 (variable -> ID .)
    PAUSE           reduce using rule 24 (variable -> ID .)
    INTEGER         reduce using rule 24 (variable -> ID .)
    IF              reduce using rule 24 (variable -> ID .)
    GOTO            reduce using rule 24 (variable -> ID .)
    FUNCTION        reduce using rule 24 (variable -> ID .)
    FORMAT          reduce using rule 24 (variable -> ID .)
    END             reduce using rule 24 (variable -> ID .)
    DO              reduce using rule 24 (variable -> ID .)
    DIMMENSION      reduce using rule 24 (variable -> ID .)
    DATA            reduce using rule 24 (variable -> ID .)
    CONTINUE        reduce using rule 24 (variable -> ID .)
    CALL            reduce using rule 24 (variable -> ID .)
    ID              reduce using rule 24 (variable -> ID .)
    $end            reduce using rule 24 (variable -> ID .)
    /               reduce using rule 24 (variable -> ID .)
    RPAREN          reduce using rule 24 (variable -> ID .)
    NE              reduce using rule 24 (variable -> ID .)
    EQ              reduce using rule 24 (variable -> ID .)
    GE              reduce using rule 24 (variable -> ID .)
    GT              reduce using rule 24 (variable -> ID .)
    LE              reduce using rule 24 (variable -> ID .)
    LT              reduce using rule 24 (variable -> ID .)
    OR              reduce using rule 24 (variable -> ID .)
    AND             reduce using rule 24 (variable -> ID .)
    LPAREN          shift and go to state 30


state 8

    (7) command -> STOP . stopOption
    (80) stopOption -> . empty
    (81) stopOption -> . INT
    (90) empty -> .
  ! shift/reduce conflict for INT resolved as shift
    INT             shift and go to state 33
    WRITE           reduce using rule 90 (empty -> .)
    SUBROUTINE      reduce using rule 90 (empty -> .)
    STOP            reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    REAL            reduce using rule 90 (empty -> .)
    PAUSE           reduce using rule 90 (empty -> .)
    INTEGER         reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    GOTO            reduce using rule 90 (empty -> .)
    FUNCTION        reduce using rule 90 (empty -> .)
    FORMAT          reduce using rule 90 (empty -> .)
    END             reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)
    DIMMENSION      reduce using rule 90 (empty -> .)
    DATA            reduce using rule 90 (empty -> .)
    CONTINUE        reduce using rule 90 (empty -> .)
    CALL            reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    $end            reduce using rule 90 (empty -> .)

    stopOption                     shift and go to state 31
    empty                          shift and go to state 32

state 9

    (8) command -> RETURN .
    INT             reduce using rule 8 (command -> RETURN .)
    WRITE           reduce using rule 8 (command -> RETURN .)
    SUBROUTINE      reduce using rule 8 (command -> RETURN .)
    STOP            reduce using rule 8 (command -> RETURN .)
    RETURN          reduce using rule 8 (command -> RETURN .)
    READ            reduce using rule 8 (command -> RETURN .)
    REAL            reduce using rule 8 (command -> RETURN .)
    PAUSE           reduce using rule 8 (command -> RETURN .)
    INTEGER         reduce using rule 8 (command -> RETURN .)
    IF              reduce using rule 8 (command -> RETURN .)
    GOTO            reduce using rule 8 (command -> RETURN .)
    FUNCTION        reduce using rule 8 (command -> RETURN .)
    FORMAT          reduce using rule 8 (command -> RETURN .)
    END             reduce using rule 8 (command -> RETURN .)
    DO              reduce using rule 8 (command -> RETURN .)
    DIMMENSION      reduce using rule 8 (command -> RETURN .)
    DATA            reduce using rule 8 (command -> RETURN .)
    CONTINUE        reduce using rule 8 (command -> RETURN .)
    CALL            reduce using rule 8 (command -> RETURN .)
    ID              reduce using rule 8 (command -> RETURN .)
    $end            reduce using rule 8 (command -> RETURN .)


state 10

    (9) command -> READ . readOption
    (82) readOption -> . LPAREN optionsIO RPAREN
    (83) readOption -> . LPAREN optionsIO RPAREN idList
    LPAREN          shift and go to state 35

    readOption                     shift and go to state 34

state 11

    (10) command -> REAL . exprlist
    (43) exprlist -> . expr
    (44) exprlist -> . exprlist , expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    exprlist                       shift and go to state 36
    expr                           shift and go to state 37
    variable                       shift and go to state 38

state 12

    (11) command -> PAUSE . pauseOption
    (78) pauseOption -> . empty
    (79) pauseOption -> . INT
    (90) empty -> .
  ! shift/reduce conflict for INT resolved as shift
    INT             shift and go to state 45
    WRITE           reduce using rule 90 (empty -> .)
    SUBROUTINE      reduce using rule 90 (empty -> .)
    STOP            reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    REAL            reduce using rule 90 (empty -> .)
    PAUSE           reduce using rule 90 (empty -> .)
    INTEGER         reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    GOTO            reduce using rule 90 (empty -> .)
    FUNCTION        reduce using rule 90 (empty -> .)
    FORMAT          reduce using rule 90 (empty -> .)
    END             reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)
    DIMMENSION      reduce using rule 90 (empty -> .)
    DATA            reduce using rule 90 (empty -> .)
    CONTINUE        reduce using rule 90 (empty -> .)
    CALL            reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    $end            reduce using rule 90 (empty -> .)

    pauseOption                    shift and go to state 43
    empty                          shift and go to state 44

state 13

    (12) command -> INTEGER . exprlist
    (43) exprlist -> . expr
    (44) exprlist -> . exprlist , expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    exprlist                       shift and go to state 46
    expr                           shift and go to state 37
    variable                       shift and go to state 38

state 14

    (13) command -> IF . LPAREN relexpr RPAREN ifOption
    LPAREN          shift and go to state 47


state 15

    (14) command -> GOTO . gotoOption
    (73) gotoOption -> . LPAREN intlist RPAREN , variable
    (74) gotoOption -> . INT
    LPAREN          shift and go to state 49
    INT             shift and go to state 50

    gotoOption                     shift and go to state 48

state 16

    (15) command -> FUNCTION . ID LPAREN varlist RPAREN
    ID              shift and go to state 51


state 17

    (16) command -> FORMAT .
    INT             reduce using rule 16 (command -> FORMAT .)
    WRITE           reduce using rule 16 (command -> FORMAT .)
    SUBROUTINE      reduce using rule 16 (command -> FORMAT .)
    STOP            reduce using rule 16 (command -> FORMAT .)
    RETURN          reduce using rule 16 (command -> FORMAT .)
    READ            reduce using rule 16 (command -> FORMAT .)
    REAL            reduce using rule 16 (command -> FORMAT .)
    PAUSE           reduce using rule 16 (command -> FORMAT .)
    INTEGER         reduce using rule 16 (command -> FORMAT .)
    IF              reduce using rule 16 (command -> FORMAT .)
    GOTO            reduce using rule 16 (command -> FORMAT .)
    FUNCTION        reduce using rule 16 (command -> FORMAT .)
    FORMAT          reduce using rule 16 (command -> FORMAT .)
    END             reduce using rule 16 (command -> FORMAT .)
    DO              reduce using rule 16 (command -> FORMAT .)
    DIMMENSION      reduce using rule 16 (command -> FORMAT .)
    DATA            reduce using rule 16 (command -> FORMAT .)
    CONTINUE        reduce using rule 16 (command -> FORMAT .)
    CALL            reduce using rule 16 (command -> FORMAT .)
    ID              reduce using rule 16 (command -> FORMAT .)
    $end            reduce using rule 16 (command -> FORMAT .)


state 18

    (17) command -> END .
    INT             reduce using rule 17 (command -> END .)
    WRITE           reduce using rule 17 (command -> END .)
    SUBROUTINE      reduce using rule 17 (command -> END .)
    STOP            reduce using rule 17 (command -> END .)
    RETURN          reduce using rule 17 (command -> END .)
    READ            reduce using rule 17 (command -> END .)
    REAL            reduce using rule 17 (command -> END .)
    PAUSE           reduce using rule 17 (command -> END .)
    INTEGER         reduce using rule 17 (command -> END .)
    IF              reduce using rule 17 (command -> END .)
    GOTO            reduce using rule 17 (command -> END .)
    FUNCTION        reduce using rule 17 (command -> END .)
    FORMAT          reduce using rule 17 (command -> END .)
    END             reduce using rule 17 (command -> END .)
    DO              reduce using rule 17 (command -> END .)
    DIMMENSION      reduce using rule 17 (command -> END .)
    DATA            reduce using rule 17 (command -> END .)
    CONTINUE        reduce using rule 17 (command -> END .)
    CALL            reduce using rule 17 (command -> END .)
    ID              reduce using rule 17 (command -> END .)
    $end            reduce using rule 17 (command -> END .)


state 19

    (18) command -> DO . doOption
    (71) doOption -> . INT variable ASSIGN INT , INT
    (72) doOption -> . INT variable ASSIGN INT , INT , INT
    INT             shift and go to state 53

    doOption                       shift and go to state 52

state 20

    (19) command -> DIMMENSION . dimmensionOption
    (67) dimmensionOption -> . ID LPAREN intlist RPAREN
    (68) dimmensionOption -> . dimmensionOption , ID LPAREN intlist RPAREN
    ID              shift and go to state 55

    dimmensionOption               shift and go to state 54

state 21

    (20) command -> DATA . dataOption
    (61) dataOption -> . varlist / datalist /
    (62) dataOption -> . dataOption , varlist / datalist /
    (27) varlist -> . variable
    (28) varlist -> . varlist , variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    dataOption                     shift and go to state 56
    varlist                        shift and go to state 57
    variable                       shift and go to state 58

state 22

    (21) command -> CONTINUE .
    INT             reduce using rule 21 (command -> CONTINUE .)
    WRITE           reduce using rule 21 (command -> CONTINUE .)
    SUBROUTINE      reduce using rule 21 (command -> CONTINUE .)
    STOP            reduce using rule 21 (command -> CONTINUE .)
    RETURN          reduce using rule 21 (command -> CONTINUE .)
    READ            reduce using rule 21 (command -> CONTINUE .)
    REAL            reduce using rule 21 (command -> CONTINUE .)
    PAUSE           reduce using rule 21 (command -> CONTINUE .)
    INTEGER         reduce using rule 21 (command -> CONTINUE .)
    IF              reduce using rule 21 (command -> CONTINUE .)
    GOTO            reduce using rule 21 (command -> CONTINUE .)
    FUNCTION        reduce using rule 21 (command -> CONTINUE .)
    FORMAT          reduce using rule 21 (command -> CONTINUE .)
    END             reduce using rule 21 (command -> CONTINUE .)
    DO              reduce using rule 21 (command -> CONTINUE .)
    DIMMENSION      reduce using rule 21 (command -> CONTINUE .)
    DATA            reduce using rule 21 (command -> CONTINUE .)
    CONTINUE        reduce using rule 21 (command -> CONTINUE .)
    CALL            reduce using rule 21 (command -> CONTINUE .)
    ID              reduce using rule 21 (command -> CONTINUE .)
    $end            reduce using rule 21 (command -> CONTINUE .)


state 23

    (22) command -> CALL . callOption
    (55) callOption -> . EXIT callExit
    (56) callOption -> . ID LPAREN idList RPAREN
    EXIT            shift and go to state 60
    ID              shift and go to state 61

    callOption                     shift and go to state 59

state 24

    (23) command -> variable . ASSIGN expr
    ASSIGN          shift and go to state 62


state 25

    (2) program -> program statement .
    INT             reduce using rule 2 (program -> program statement .)
    WRITE           reduce using rule 2 (program -> program statement .)
    SUBROUTINE      reduce using rule 2 (program -> program statement .)
    STOP            reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    READ            reduce using rule 2 (program -> program statement .)
    REAL            reduce using rule 2 (program -> program statement .)
    PAUSE           reduce using rule 2 (program -> program statement .)
    INTEGER         reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    GOTO            reduce using rule 2 (program -> program statement .)
    FUNCTION        reduce using rule 2 (program -> program statement .)
    FORMAT          reduce using rule 2 (program -> program statement .)
    END             reduce using rule 2 (program -> program statement .)
    DO              reduce using rule 2 (program -> program statement .)
    DIMMENSION      reduce using rule 2 (program -> program statement .)
    DATA            reduce using rule 2 (program -> program statement .)
    CONTINUE        reduce using rule 2 (program -> program statement .)
    CALL            reduce using rule 2 (program -> program statement .)
    ID              reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 26

    (4) statement -> INT command .
    INT             reduce using rule 4 (statement -> INT command .)
    WRITE           reduce using rule 4 (statement -> INT command .)
    SUBROUTINE      reduce using rule 4 (statement -> INT command .)
    STOP            reduce using rule 4 (statement -> INT command .)
    RETURN          reduce using rule 4 (statement -> INT command .)
    READ            reduce using rule 4 (statement -> INT command .)
    REAL            reduce using rule 4 (statement -> INT command .)
    PAUSE           reduce using rule 4 (statement -> INT command .)
    INTEGER         reduce using rule 4 (statement -> INT command .)
    IF              reduce using rule 4 (statement -> INT command .)
    GOTO            reduce using rule 4 (statement -> INT command .)
    FUNCTION        reduce using rule 4 (statement -> INT command .)
    FORMAT          reduce using rule 4 (statement -> INT command .)
    END             reduce using rule 4 (statement -> INT command .)
    DO              reduce using rule 4 (statement -> INT command .)
    DIMMENSION      reduce using rule 4 (statement -> INT command .)
    DATA            reduce using rule 4 (statement -> INT command .)
    CONTINUE        reduce using rule 4 (statement -> INT command .)
    CALL            reduce using rule 4 (statement -> INT command .)
    ID              reduce using rule 4 (statement -> INT command .)
    $end            reduce using rule 4 (statement -> INT command .)


state 27

    (5) command -> WRITE writeOption .
    INT             reduce using rule 5 (command -> WRITE writeOption .)
    WRITE           reduce using rule 5 (command -> WRITE writeOption .)
    SUBROUTINE      reduce using rule 5 (command -> WRITE writeOption .)
    STOP            reduce using rule 5 (command -> WRITE writeOption .)
    RETURN          reduce using rule 5 (command -> WRITE writeOption .)
    READ            reduce using rule 5 (command -> WRITE writeOption .)
    REAL            reduce using rule 5 (command -> WRITE writeOption .)
    PAUSE           reduce using rule 5 (command -> WRITE writeOption .)
    INTEGER         reduce using rule 5 (command -> WRITE writeOption .)
    IF              reduce using rule 5 (command -> WRITE writeOption .)
    GOTO            reduce using rule 5 (command -> WRITE writeOption .)
    FUNCTION        reduce using rule 5 (command -> WRITE writeOption .)
    FORMAT          reduce using rule 5 (command -> WRITE writeOption .)
    END             reduce using rule 5 (command -> WRITE writeOption .)
    DO              reduce using rule 5 (command -> WRITE writeOption .)
    DIMMENSION      reduce using rule 5 (command -> WRITE writeOption .)
    DATA            reduce using rule 5 (command -> WRITE writeOption .)
    CONTINUE        reduce using rule 5 (command -> WRITE writeOption .)
    CALL            reduce using rule 5 (command -> WRITE writeOption .)
    ID              reduce using rule 5 (command -> WRITE writeOption .)
    $end            reduce using rule 5 (command -> WRITE writeOption .)


state 28

    (84) writeOption -> LPAREN . optionsIO RPAREN
    (85) writeOption -> LPAREN . optionsIO RPAREN idList
    (86) optionsIO -> . ID
    (87) optionsIO -> . ID , INT
    (88) optionsIO -> . INT
    (89) optionsIO -> . INT , INT
    ID              shift and go to state 64
    INT             shift and go to state 65

    optionsIO                      shift and go to state 63

state 29

    (6) command -> SUBROUTINE ID . LPAREN varlist RPAREN
    LPAREN          shift and go to state 66


state 30

    (25) variable -> ID LPAREN . expr RPAREN
    (26) variable -> ID LPAREN . expr , expr RPAREN
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 67
    variable                       shift and go to state 38

state 31

    (7) command -> STOP stopOption .
    INT             reduce using rule 7 (command -> STOP stopOption .)
    WRITE           reduce using rule 7 (command -> STOP stopOption .)
    SUBROUTINE      reduce using rule 7 (command -> STOP stopOption .)
    STOP            reduce using rule 7 (command -> STOP stopOption .)
    RETURN          reduce using rule 7 (command -> STOP stopOption .)
    READ            reduce using rule 7 (command -> STOP stopOption .)
    REAL            reduce using rule 7 (command -> STOP stopOption .)
    PAUSE           reduce using rule 7 (command -> STOP stopOption .)
    INTEGER         reduce using rule 7 (command -> STOP stopOption .)
    IF              reduce using rule 7 (command -> STOP stopOption .)
    GOTO            reduce using rule 7 (command -> STOP stopOption .)
    FUNCTION        reduce using rule 7 (command -> STOP stopOption .)
    FORMAT          reduce using rule 7 (command -> STOP stopOption .)
    END             reduce using rule 7 (command -> STOP stopOption .)
    DO              reduce using rule 7 (command -> STOP stopOption .)
    DIMMENSION      reduce using rule 7 (command -> STOP stopOption .)
    DATA            reduce using rule 7 (command -> STOP stopOption .)
    CONTINUE        reduce using rule 7 (command -> STOP stopOption .)
    CALL            reduce using rule 7 (command -> STOP stopOption .)
    ID              reduce using rule 7 (command -> STOP stopOption .)
    $end            reduce using rule 7 (command -> STOP stopOption .)


state 32

    (80) stopOption -> empty .
    INT             reduce using rule 80 (stopOption -> empty .)
    WRITE           reduce using rule 80 (stopOption -> empty .)
    SUBROUTINE      reduce using rule 80 (stopOption -> empty .)
    STOP            reduce using rule 80 (stopOption -> empty .)
    RETURN          reduce using rule 80 (stopOption -> empty .)
    READ            reduce using rule 80 (stopOption -> empty .)
    REAL            reduce using rule 80 (stopOption -> empty .)
    PAUSE           reduce using rule 80 (stopOption -> empty .)
    INTEGER         reduce using rule 80 (stopOption -> empty .)
    IF              reduce using rule 80 (stopOption -> empty .)
    GOTO            reduce using rule 80 (stopOption -> empty .)
    FUNCTION        reduce using rule 80 (stopOption -> empty .)
    FORMAT          reduce using rule 80 (stopOption -> empty .)
    END             reduce using rule 80 (stopOption -> empty .)
    DO              reduce using rule 80 (stopOption -> empty .)
    DIMMENSION      reduce using rule 80 (stopOption -> empty .)
    DATA            reduce using rule 80 (stopOption -> empty .)
    CONTINUE        reduce using rule 80 (stopOption -> empty .)
    CALL            reduce using rule 80 (stopOption -> empty .)
    ID              reduce using rule 80 (stopOption -> empty .)
    $end            reduce using rule 80 (stopOption -> empty .)


state 33

    (81) stopOption -> INT .
    INT             reduce using rule 81 (stopOption -> INT .)
    WRITE           reduce using rule 81 (stopOption -> INT .)
    SUBROUTINE      reduce using rule 81 (stopOption -> INT .)
    STOP            reduce using rule 81 (stopOption -> INT .)
    RETURN          reduce using rule 81 (stopOption -> INT .)
    READ            reduce using rule 81 (stopOption -> INT .)
    REAL            reduce using rule 81 (stopOption -> INT .)
    PAUSE           reduce using rule 81 (stopOption -> INT .)
    INTEGER         reduce using rule 81 (stopOption -> INT .)
    IF              reduce using rule 81 (stopOption -> INT .)
    GOTO            reduce using rule 81 (stopOption -> INT .)
    FUNCTION        reduce using rule 81 (stopOption -> INT .)
    FORMAT          reduce using rule 81 (stopOption -> INT .)
    END             reduce using rule 81 (stopOption -> INT .)
    DO              reduce using rule 81 (stopOption -> INT .)
    DIMMENSION      reduce using rule 81 (stopOption -> INT .)
    DATA            reduce using rule 81 (stopOption -> INT .)
    CONTINUE        reduce using rule 81 (stopOption -> INT .)
    CALL            reduce using rule 81 (stopOption -> INT .)
    ID              reduce using rule 81 (stopOption -> INT .)
    $end            reduce using rule 81 (stopOption -> INT .)


state 34

    (9) command -> READ readOption .
    INT             reduce using rule 9 (command -> READ readOption .)
    WRITE           reduce using rule 9 (command -> READ readOption .)
    SUBROUTINE      reduce using rule 9 (command -> READ readOption .)
    STOP            reduce using rule 9 (command -> READ readOption .)
    RETURN          reduce using rule 9 (command -> READ readOption .)
    READ            reduce using rule 9 (command -> READ readOption .)
    REAL            reduce using rule 9 (command -> READ readOption .)
    PAUSE           reduce using rule 9 (command -> READ readOption .)
    INTEGER         reduce using rule 9 (command -> READ readOption .)
    IF              reduce using rule 9 (command -> READ readOption .)
    GOTO            reduce using rule 9 (command -> READ readOption .)
    FUNCTION        reduce using rule 9 (command -> READ readOption .)
    FORMAT          reduce using rule 9 (command -> READ readOption .)
    END             reduce using rule 9 (command -> READ readOption .)
    DO              reduce using rule 9 (command -> READ readOption .)
    DIMMENSION      reduce using rule 9 (command -> READ readOption .)
    DATA            reduce using rule 9 (command -> READ readOption .)
    CONTINUE        reduce using rule 9 (command -> READ readOption .)
    CALL            reduce using rule 9 (command -> READ readOption .)
    ID              reduce using rule 9 (command -> READ readOption .)
    $end            reduce using rule 9 (command -> READ readOption .)


state 35

    (82) readOption -> LPAREN . optionsIO RPAREN
    (83) readOption -> LPAREN . optionsIO RPAREN idList
    (86) optionsIO -> . ID
    (87) optionsIO -> . ID , INT
    (88) optionsIO -> . INT
    (89) optionsIO -> . INT , INT
    ID              shift and go to state 64
    INT             shift and go to state 65

    optionsIO                      shift and go to state 68

state 36

    (10) command -> REAL exprlist .
    (44) exprlist -> exprlist . , expr
    INT             reduce using rule 10 (command -> REAL exprlist .)
    WRITE           reduce using rule 10 (command -> REAL exprlist .)
    SUBROUTINE      reduce using rule 10 (command -> REAL exprlist .)
    STOP            reduce using rule 10 (command -> REAL exprlist .)
    RETURN          reduce using rule 10 (command -> REAL exprlist .)
    READ            reduce using rule 10 (command -> REAL exprlist .)
    REAL            reduce using rule 10 (command -> REAL exprlist .)
    PAUSE           reduce using rule 10 (command -> REAL exprlist .)
    INTEGER         reduce using rule 10 (command -> REAL exprlist .)
    IF              reduce using rule 10 (command -> REAL exprlist .)
    GOTO            reduce using rule 10 (command -> REAL exprlist .)
    FUNCTION        reduce using rule 10 (command -> REAL exprlist .)
    FORMAT          reduce using rule 10 (command -> REAL exprlist .)
    END             reduce using rule 10 (command -> REAL exprlist .)
    DO              reduce using rule 10 (command -> REAL exprlist .)
    DIMMENSION      reduce using rule 10 (command -> REAL exprlist .)
    DATA            reduce using rule 10 (command -> REAL exprlist .)
    CONTINUE        reduce using rule 10 (command -> REAL exprlist .)
    CALL            reduce using rule 10 (command -> REAL exprlist .)
    ID              reduce using rule 10 (command -> REAL exprlist .)
    $end            reduce using rule 10 (command -> REAL exprlist .)
    ,               shift and go to state 69


state 37

    (43) exprlist -> expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    ,               reduce using rule 43 (exprlist -> expr .)
    INT             reduce using rule 43 (exprlist -> expr .)
    WRITE           reduce using rule 43 (exprlist -> expr .)
    SUBROUTINE      reduce using rule 43 (exprlist -> expr .)
    STOP            reduce using rule 43 (exprlist -> expr .)
    RETURN          reduce using rule 43 (exprlist -> expr .)
    READ            reduce using rule 43 (exprlist -> expr .)
    REAL            reduce using rule 43 (exprlist -> expr .)
    PAUSE           reduce using rule 43 (exprlist -> expr .)
    INTEGER         reduce using rule 43 (exprlist -> expr .)
    IF              reduce using rule 43 (exprlist -> expr .)
    GOTO            reduce using rule 43 (exprlist -> expr .)
    FUNCTION        reduce using rule 43 (exprlist -> expr .)
    FORMAT          reduce using rule 43 (exprlist -> expr .)
    END             reduce using rule 43 (exprlist -> expr .)
    DO              reduce using rule 43 (exprlist -> expr .)
    DIMMENSION      reduce using rule 43 (exprlist -> expr .)
    DATA            reduce using rule 43 (exprlist -> expr .)
    CONTINUE        reduce using rule 43 (exprlist -> expr .)
    CALL            reduce using rule 43 (exprlist -> expr .)
    ID              reduce using rule 43 (exprlist -> expr .)
    $end            reduce using rule 43 (exprlist -> expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 38

    (33) expr -> variable .
    EXPONENT        reduce using rule 33 (expr -> variable .)
    DIVIDE          reduce using rule 33 (expr -> variable .)
    TIMES           reduce using rule 33 (expr -> variable .)
    MINUS           reduce using rule 33 (expr -> variable .)
    PLUS            reduce using rule 33 (expr -> variable .)
    ,               reduce using rule 33 (expr -> variable .)
    INT             reduce using rule 33 (expr -> variable .)
    WRITE           reduce using rule 33 (expr -> variable .)
    SUBROUTINE      reduce using rule 33 (expr -> variable .)
    STOP            reduce using rule 33 (expr -> variable .)
    RETURN          reduce using rule 33 (expr -> variable .)
    READ            reduce using rule 33 (expr -> variable .)
    REAL            reduce using rule 33 (expr -> variable .)
    PAUSE           reduce using rule 33 (expr -> variable .)
    INTEGER         reduce using rule 33 (expr -> variable .)
    IF              reduce using rule 33 (expr -> variable .)
    GOTO            reduce using rule 33 (expr -> variable .)
    FUNCTION        reduce using rule 33 (expr -> variable .)
    FORMAT          reduce using rule 33 (expr -> variable .)
    END             reduce using rule 33 (expr -> variable .)
    DO              reduce using rule 33 (expr -> variable .)
    DIMMENSION      reduce using rule 33 (expr -> variable .)
    DATA            reduce using rule 33 (expr -> variable .)
    CONTINUE        reduce using rule 33 (expr -> variable .)
    CALL            reduce using rule 33 (expr -> variable .)
    ID              reduce using rule 33 (expr -> variable .)
    $end            reduce using rule 33 (expr -> variable .)
    RPAREN          reduce using rule 33 (expr -> variable .)
    NE              reduce using rule 33 (expr -> variable .)
    EQ              reduce using rule 33 (expr -> variable .)
    GE              reduce using rule 33 (expr -> variable .)
    GT              reduce using rule 33 (expr -> variable .)
    LE              reduce using rule 33 (expr -> variable .)
    LT              reduce using rule 33 (expr -> variable .)
    OR              reduce using rule 33 (expr -> variable .)
    AND             reduce using rule 33 (expr -> variable .)


state 39

    (34) expr -> RREAL .
    EXPONENT        reduce using rule 34 (expr -> RREAL .)
    DIVIDE          reduce using rule 34 (expr -> RREAL .)
    TIMES           reduce using rule 34 (expr -> RREAL .)
    MINUS           reduce using rule 34 (expr -> RREAL .)
    PLUS            reduce using rule 34 (expr -> RREAL .)
    ,               reduce using rule 34 (expr -> RREAL .)
    INT             reduce using rule 34 (expr -> RREAL .)
    WRITE           reduce using rule 34 (expr -> RREAL .)
    SUBROUTINE      reduce using rule 34 (expr -> RREAL .)
    STOP            reduce using rule 34 (expr -> RREAL .)
    RETURN          reduce using rule 34 (expr -> RREAL .)
    READ            reduce using rule 34 (expr -> RREAL .)
    REAL            reduce using rule 34 (expr -> RREAL .)
    PAUSE           reduce using rule 34 (expr -> RREAL .)
    INTEGER         reduce using rule 34 (expr -> RREAL .)
    IF              reduce using rule 34 (expr -> RREAL .)
    GOTO            reduce using rule 34 (expr -> RREAL .)
    FUNCTION        reduce using rule 34 (expr -> RREAL .)
    FORMAT          reduce using rule 34 (expr -> RREAL .)
    END             reduce using rule 34 (expr -> RREAL .)
    DO              reduce using rule 34 (expr -> RREAL .)
    DIMMENSION      reduce using rule 34 (expr -> RREAL .)
    DATA            reduce using rule 34 (expr -> RREAL .)
    CONTINUE        reduce using rule 34 (expr -> RREAL .)
    CALL            reduce using rule 34 (expr -> RREAL .)
    ID              reduce using rule 34 (expr -> RREAL .)
    $end            reduce using rule 34 (expr -> RREAL .)
    RPAREN          reduce using rule 34 (expr -> RREAL .)
    NE              reduce using rule 34 (expr -> RREAL .)
    EQ              reduce using rule 34 (expr -> RREAL .)
    GE              reduce using rule 34 (expr -> RREAL .)
    GT              reduce using rule 34 (expr -> RREAL .)
    LE              reduce using rule 34 (expr -> RREAL .)
    LT              reduce using rule 34 (expr -> RREAL .)
    OR              reduce using rule 34 (expr -> RREAL .)
    AND             reduce using rule 34 (expr -> RREAL .)


state 40

    (35) expr -> INT .
    EXPONENT        reduce using rule 35 (expr -> INT .)
    DIVIDE          reduce using rule 35 (expr -> INT .)
    TIMES           reduce using rule 35 (expr -> INT .)
    MINUS           reduce using rule 35 (expr -> INT .)
    PLUS            reduce using rule 35 (expr -> INT .)
    ,               reduce using rule 35 (expr -> INT .)
    INT             reduce using rule 35 (expr -> INT .)
    WRITE           reduce using rule 35 (expr -> INT .)
    SUBROUTINE      reduce using rule 35 (expr -> INT .)
    STOP            reduce using rule 35 (expr -> INT .)
    RETURN          reduce using rule 35 (expr -> INT .)
    READ            reduce using rule 35 (expr -> INT .)
    REAL            reduce using rule 35 (expr -> INT .)
    PAUSE           reduce using rule 35 (expr -> INT .)
    INTEGER         reduce using rule 35 (expr -> INT .)
    IF              reduce using rule 35 (expr -> INT .)
    GOTO            reduce using rule 35 (expr -> INT .)
    FUNCTION        reduce using rule 35 (expr -> INT .)
    FORMAT          reduce using rule 35 (expr -> INT .)
    END             reduce using rule 35 (expr -> INT .)
    DO              reduce using rule 35 (expr -> INT .)
    DIMMENSION      reduce using rule 35 (expr -> INT .)
    DATA            reduce using rule 35 (expr -> INT .)
    CONTINUE        reduce using rule 35 (expr -> INT .)
    CALL            reduce using rule 35 (expr -> INT .)
    ID              reduce using rule 35 (expr -> INT .)
    $end            reduce using rule 35 (expr -> INT .)
    RPAREN          reduce using rule 35 (expr -> INT .)
    NE              reduce using rule 35 (expr -> INT .)
    EQ              reduce using rule 35 (expr -> INT .)
    GE              reduce using rule 35 (expr -> INT .)
    GT              reduce using rule 35 (expr -> INT .)
    LE              reduce using rule 35 (expr -> INT .)
    LT              reduce using rule 35 (expr -> INT .)
    OR              reduce using rule 35 (expr -> INT .)
    AND             reduce using rule 35 (expr -> INT .)


state 41

    (36) expr -> LPAREN . expr RPAREN
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 75
    variable                       shift and go to state 38

state 42

    (37) expr -> MINUS . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 76
    variable                       shift and go to state 38

state 43

    (11) command -> PAUSE pauseOption .
    INT             reduce using rule 11 (command -> PAUSE pauseOption .)
    WRITE           reduce using rule 11 (command -> PAUSE pauseOption .)
    SUBROUTINE      reduce using rule 11 (command -> PAUSE pauseOption .)
    STOP            reduce using rule 11 (command -> PAUSE pauseOption .)
    RETURN          reduce using rule 11 (command -> PAUSE pauseOption .)
    READ            reduce using rule 11 (command -> PAUSE pauseOption .)
    REAL            reduce using rule 11 (command -> PAUSE pauseOption .)
    PAUSE           reduce using rule 11 (command -> PAUSE pauseOption .)
    INTEGER         reduce using rule 11 (command -> PAUSE pauseOption .)
    IF              reduce using rule 11 (command -> PAUSE pauseOption .)
    GOTO            reduce using rule 11 (command -> PAUSE pauseOption .)
    FUNCTION        reduce using rule 11 (command -> PAUSE pauseOption .)
    FORMAT          reduce using rule 11 (command -> PAUSE pauseOption .)
    END             reduce using rule 11 (command -> PAUSE pauseOption .)
    DO              reduce using rule 11 (command -> PAUSE pauseOption .)
    DIMMENSION      reduce using rule 11 (command -> PAUSE pauseOption .)
    DATA            reduce using rule 11 (command -> PAUSE pauseOption .)
    CONTINUE        reduce using rule 11 (command -> PAUSE pauseOption .)
    CALL            reduce using rule 11 (command -> PAUSE pauseOption .)
    ID              reduce using rule 11 (command -> PAUSE pauseOption .)
    $end            reduce using rule 11 (command -> PAUSE pauseOption .)


state 44

    (78) pauseOption -> empty .
    INT             reduce using rule 78 (pauseOption -> empty .)
    WRITE           reduce using rule 78 (pauseOption -> empty .)
    SUBROUTINE      reduce using rule 78 (pauseOption -> empty .)
    STOP            reduce using rule 78 (pauseOption -> empty .)
    RETURN          reduce using rule 78 (pauseOption -> empty .)
    READ            reduce using rule 78 (pauseOption -> empty .)
    REAL            reduce using rule 78 (pauseOption -> empty .)
    PAUSE           reduce using rule 78 (pauseOption -> empty .)
    INTEGER         reduce using rule 78 (pauseOption -> empty .)
    IF              reduce using rule 78 (pauseOption -> empty .)
    GOTO            reduce using rule 78 (pauseOption -> empty .)
    FUNCTION        reduce using rule 78 (pauseOption -> empty .)
    FORMAT          reduce using rule 78 (pauseOption -> empty .)
    END             reduce using rule 78 (pauseOption -> empty .)
    DO              reduce using rule 78 (pauseOption -> empty .)
    DIMMENSION      reduce using rule 78 (pauseOption -> empty .)
    DATA            reduce using rule 78 (pauseOption -> empty .)
    CONTINUE        reduce using rule 78 (pauseOption -> empty .)
    CALL            reduce using rule 78 (pauseOption -> empty .)
    ID              reduce using rule 78 (pauseOption -> empty .)
    $end            reduce using rule 78 (pauseOption -> empty .)


state 45

    (79) pauseOption -> INT .
    INT             reduce using rule 79 (pauseOption -> INT .)
    WRITE           reduce using rule 79 (pauseOption -> INT .)
    SUBROUTINE      reduce using rule 79 (pauseOption -> INT .)
    STOP            reduce using rule 79 (pauseOption -> INT .)
    RETURN          reduce using rule 79 (pauseOption -> INT .)
    READ            reduce using rule 79 (pauseOption -> INT .)
    REAL            reduce using rule 79 (pauseOption -> INT .)
    PAUSE           reduce using rule 79 (pauseOption -> INT .)
    INTEGER         reduce using rule 79 (pauseOption -> INT .)
    IF              reduce using rule 79 (pauseOption -> INT .)
    GOTO            reduce using rule 79 (pauseOption -> INT .)
    FUNCTION        reduce using rule 79 (pauseOption -> INT .)
    FORMAT          reduce using rule 79 (pauseOption -> INT .)
    END             reduce using rule 79 (pauseOption -> INT .)
    DO              reduce using rule 79 (pauseOption -> INT .)
    DIMMENSION      reduce using rule 79 (pauseOption -> INT .)
    DATA            reduce using rule 79 (pauseOption -> INT .)
    CONTINUE        reduce using rule 79 (pauseOption -> INT .)
    CALL            reduce using rule 79 (pauseOption -> INT .)
    ID              reduce using rule 79 (pauseOption -> INT .)
    $end            reduce using rule 79 (pauseOption -> INT .)


state 46

    (12) command -> INTEGER exprlist .
    (44) exprlist -> exprlist . , expr
    INT             reduce using rule 12 (command -> INTEGER exprlist .)
    WRITE           reduce using rule 12 (command -> INTEGER exprlist .)
    SUBROUTINE      reduce using rule 12 (command -> INTEGER exprlist .)
    STOP            reduce using rule 12 (command -> INTEGER exprlist .)
    RETURN          reduce using rule 12 (command -> INTEGER exprlist .)
    READ            reduce using rule 12 (command -> INTEGER exprlist .)
    REAL            reduce using rule 12 (command -> INTEGER exprlist .)
    PAUSE           reduce using rule 12 (command -> INTEGER exprlist .)
    INTEGER         reduce using rule 12 (command -> INTEGER exprlist .)
    IF              reduce using rule 12 (command -> INTEGER exprlist .)
    GOTO            reduce using rule 12 (command -> INTEGER exprlist .)
    FUNCTION        reduce using rule 12 (command -> INTEGER exprlist .)
    FORMAT          reduce using rule 12 (command -> INTEGER exprlist .)
    END             reduce using rule 12 (command -> INTEGER exprlist .)
    DO              reduce using rule 12 (command -> INTEGER exprlist .)
    DIMMENSION      reduce using rule 12 (command -> INTEGER exprlist .)
    DATA            reduce using rule 12 (command -> INTEGER exprlist .)
    CONTINUE        reduce using rule 12 (command -> INTEGER exprlist .)
    CALL            reduce using rule 12 (command -> INTEGER exprlist .)
    ID              reduce using rule 12 (command -> INTEGER exprlist .)
    $end            reduce using rule 12 (command -> INTEGER exprlist .)
    ,               shift and go to state 69


state 47

    (13) command -> IF LPAREN . relexpr RPAREN ifOption
    (45) relexpr -> . expr
    (46) relexpr -> . NOT relexpr
    (47) relexpr -> . relexpr OR relexpr
    (48) relexpr -> . relexpr AND relexpr
    (49) relexpr -> . expr NE expr
    (50) relexpr -> . expr EQ expr
    (51) relexpr -> . expr GE expr
    (52) relexpr -> . expr GT expr
    (53) relexpr -> . expr LE expr
    (54) relexpr -> . expr LT expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    NOT             shift and go to state 79
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    relexpr                        shift and go to state 77
    expr                           shift and go to state 78
    variable                       shift and go to state 38

state 48

    (14) command -> GOTO gotoOption .
    INT             reduce using rule 14 (command -> GOTO gotoOption .)
    WRITE           reduce using rule 14 (command -> GOTO gotoOption .)
    SUBROUTINE      reduce using rule 14 (command -> GOTO gotoOption .)
    STOP            reduce using rule 14 (command -> GOTO gotoOption .)
    RETURN          reduce using rule 14 (command -> GOTO gotoOption .)
    READ            reduce using rule 14 (command -> GOTO gotoOption .)
    REAL            reduce using rule 14 (command -> GOTO gotoOption .)
    PAUSE           reduce using rule 14 (command -> GOTO gotoOption .)
    INTEGER         reduce using rule 14 (command -> GOTO gotoOption .)
    IF              reduce using rule 14 (command -> GOTO gotoOption .)
    GOTO            reduce using rule 14 (command -> GOTO gotoOption .)
    FUNCTION        reduce using rule 14 (command -> GOTO gotoOption .)
    FORMAT          reduce using rule 14 (command -> GOTO gotoOption .)
    END             reduce using rule 14 (command -> GOTO gotoOption .)
    DO              reduce using rule 14 (command -> GOTO gotoOption .)
    DIMMENSION      reduce using rule 14 (command -> GOTO gotoOption .)
    DATA            reduce using rule 14 (command -> GOTO gotoOption .)
    CONTINUE        reduce using rule 14 (command -> GOTO gotoOption .)
    CALL            reduce using rule 14 (command -> GOTO gotoOption .)
    ID              reduce using rule 14 (command -> GOTO gotoOption .)
    $end            reduce using rule 14 (command -> GOTO gotoOption .)


state 49

    (73) gotoOption -> LPAREN . intlist RPAREN , variable
    (69) intlist -> . INT
    (70) intlist -> . intlist , INT
    INT             shift and go to state 81

    intlist                        shift and go to state 80

state 50

    (74) gotoOption -> INT .
    INT             reduce using rule 74 (gotoOption -> INT .)
    WRITE           reduce using rule 74 (gotoOption -> INT .)
    SUBROUTINE      reduce using rule 74 (gotoOption -> INT .)
    STOP            reduce using rule 74 (gotoOption -> INT .)
    RETURN          reduce using rule 74 (gotoOption -> INT .)
    READ            reduce using rule 74 (gotoOption -> INT .)
    REAL            reduce using rule 74 (gotoOption -> INT .)
    PAUSE           reduce using rule 74 (gotoOption -> INT .)
    INTEGER         reduce using rule 74 (gotoOption -> INT .)
    IF              reduce using rule 74 (gotoOption -> INT .)
    GOTO            reduce using rule 74 (gotoOption -> INT .)
    FUNCTION        reduce using rule 74 (gotoOption -> INT .)
    FORMAT          reduce using rule 74 (gotoOption -> INT .)
    END             reduce using rule 74 (gotoOption -> INT .)
    DO              reduce using rule 74 (gotoOption -> INT .)
    DIMMENSION      reduce using rule 74 (gotoOption -> INT .)
    DATA            reduce using rule 74 (gotoOption -> INT .)
    CONTINUE        reduce using rule 74 (gotoOption -> INT .)
    CALL            reduce using rule 74 (gotoOption -> INT .)
    ID              reduce using rule 74 (gotoOption -> INT .)
    $end            reduce using rule 74 (gotoOption -> INT .)


state 51

    (15) command -> FUNCTION ID . LPAREN varlist RPAREN
    LPAREN          shift and go to state 82


state 52

    (18) command -> DO doOption .
    INT             reduce using rule 18 (command -> DO doOption .)
    WRITE           reduce using rule 18 (command -> DO doOption .)
    SUBROUTINE      reduce using rule 18 (command -> DO doOption .)
    STOP            reduce using rule 18 (command -> DO doOption .)
    RETURN          reduce using rule 18 (command -> DO doOption .)
    READ            reduce using rule 18 (command -> DO doOption .)
    REAL            reduce using rule 18 (command -> DO doOption .)
    PAUSE           reduce using rule 18 (command -> DO doOption .)
    INTEGER         reduce using rule 18 (command -> DO doOption .)
    IF              reduce using rule 18 (command -> DO doOption .)
    GOTO            reduce using rule 18 (command -> DO doOption .)
    FUNCTION        reduce using rule 18 (command -> DO doOption .)
    FORMAT          reduce using rule 18 (command -> DO doOption .)
    END             reduce using rule 18 (command -> DO doOption .)
    DO              reduce using rule 18 (command -> DO doOption .)
    DIMMENSION      reduce using rule 18 (command -> DO doOption .)
    DATA            reduce using rule 18 (command -> DO doOption .)
    CONTINUE        reduce using rule 18 (command -> DO doOption .)
    CALL            reduce using rule 18 (command -> DO doOption .)
    ID              reduce using rule 18 (command -> DO doOption .)
    $end            reduce using rule 18 (command -> DO doOption .)


state 53

    (71) doOption -> INT . variable ASSIGN INT , INT
    (72) doOption -> INT . variable ASSIGN INT , INT , INT
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    variable                       shift and go to state 83

state 54

    (19) command -> DIMMENSION dimmensionOption .
    (68) dimmensionOption -> dimmensionOption . , ID LPAREN intlist RPAREN
    INT             reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    WRITE           reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    SUBROUTINE      reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    STOP            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    RETURN          reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    READ            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    REAL            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    PAUSE           reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    INTEGER         reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    IF              reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    GOTO            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    FUNCTION        reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    FORMAT          reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    END             reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    DO              reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    DIMMENSION      reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    DATA            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    CONTINUE        reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    CALL            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    ID              reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    $end            reduce using rule 19 (command -> DIMMENSION dimmensionOption .)
    ,               shift and go to state 84


state 55

    (67) dimmensionOption -> ID . LPAREN intlist RPAREN
    LPAREN          shift and go to state 85


state 56

    (20) command -> DATA dataOption .
    (62) dataOption -> dataOption . , varlist / datalist /
    INT             reduce using rule 20 (command -> DATA dataOption .)
    WRITE           reduce using rule 20 (command -> DATA dataOption .)
    SUBROUTINE      reduce using rule 20 (command -> DATA dataOption .)
    STOP            reduce using rule 20 (command -> DATA dataOption .)
    RETURN          reduce using rule 20 (command -> DATA dataOption .)
    READ            reduce using rule 20 (command -> DATA dataOption .)
    REAL            reduce using rule 20 (command -> DATA dataOption .)
    PAUSE           reduce using rule 20 (command -> DATA dataOption .)
    INTEGER         reduce using rule 20 (command -> DATA dataOption .)
    IF              reduce using rule 20 (command -> DATA dataOption .)
    GOTO            reduce using rule 20 (command -> DATA dataOption .)
    FUNCTION        reduce using rule 20 (command -> DATA dataOption .)
    FORMAT          reduce using rule 20 (command -> DATA dataOption .)
    END             reduce using rule 20 (command -> DATA dataOption .)
    DO              reduce using rule 20 (command -> DATA dataOption .)
    DIMMENSION      reduce using rule 20 (command -> DATA dataOption .)
    DATA            reduce using rule 20 (command -> DATA dataOption .)
    CONTINUE        reduce using rule 20 (command -> DATA dataOption .)
    CALL            reduce using rule 20 (command -> DATA dataOption .)
    ID              reduce using rule 20 (command -> DATA dataOption .)
    $end            reduce using rule 20 (command -> DATA dataOption .)
    ,               shift and go to state 86


state 57

    (61) dataOption -> varlist . / datalist /
    (28) varlist -> varlist . , variable
    /               shift and go to state 87
    ,               shift and go to state 88


state 58

    (27) varlist -> variable .
    /               reduce using rule 27 (varlist -> variable .)
    ,               reduce using rule 27 (varlist -> variable .)
    RPAREN          reduce using rule 27 (varlist -> variable .)


state 59

    (22) command -> CALL callOption .
    INT             reduce using rule 22 (command -> CALL callOption .)
    WRITE           reduce using rule 22 (command -> CALL callOption .)
    SUBROUTINE      reduce using rule 22 (command -> CALL callOption .)
    STOP            reduce using rule 22 (command -> CALL callOption .)
    RETURN          reduce using rule 22 (command -> CALL callOption .)
    READ            reduce using rule 22 (command -> CALL callOption .)
    REAL            reduce using rule 22 (command -> CALL callOption .)
    PAUSE           reduce using rule 22 (command -> CALL callOption .)
    INTEGER         reduce using rule 22 (command -> CALL callOption .)
    IF              reduce using rule 22 (command -> CALL callOption .)
    GOTO            reduce using rule 22 (command -> CALL callOption .)
    FUNCTION        reduce using rule 22 (command -> CALL callOption .)
    FORMAT          reduce using rule 22 (command -> CALL callOption .)
    END             reduce using rule 22 (command -> CALL callOption .)
    DO              reduce using rule 22 (command -> CALL callOption .)
    DIMMENSION      reduce using rule 22 (command -> CALL callOption .)
    DATA            reduce using rule 22 (command -> CALL callOption .)
    CONTINUE        reduce using rule 22 (command -> CALL callOption .)
    CALL            reduce using rule 22 (command -> CALL callOption .)
    ID              reduce using rule 22 (command -> CALL callOption .)
    $end            reduce using rule 22 (command -> CALL callOption .)


state 60

    (55) callOption -> EXIT . callExit
    (57) callExit -> . empty
    (58) callExit -> . LPAREN INT RPAREN
    (90) empty -> .
    LPAREN          shift and go to state 91
    INT             reduce using rule 90 (empty -> .)
    WRITE           reduce using rule 90 (empty -> .)
    SUBROUTINE      reduce using rule 90 (empty -> .)
    STOP            reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    REAL            reduce using rule 90 (empty -> .)
    PAUSE           reduce using rule 90 (empty -> .)
    INTEGER         reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    GOTO            reduce using rule 90 (empty -> .)
    FUNCTION        reduce using rule 90 (empty -> .)
    FORMAT          reduce using rule 90 (empty -> .)
    END             reduce using rule 90 (empty -> .)
    DO              reduce using rule 90 (empty -> .)
    DIMMENSION      reduce using rule 90 (empty -> .)
    DATA            reduce using rule 90 (empty -> .)
    CONTINUE        reduce using rule 90 (empty -> .)
    CALL            reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    $end            reduce using rule 90 (empty -> .)

    callExit                       shift and go to state 89
    empty                          shift and go to state 90

state 61

    (56) callOption -> ID . LPAREN idList RPAREN
    LPAREN          shift and go to state 92


state 62

    (23) command -> variable ASSIGN . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    variable                       shift and go to state 38
    expr                           shift and go to state 93

state 63

    (84) writeOption -> LPAREN optionsIO . RPAREN
    (85) writeOption -> LPAREN optionsIO . RPAREN idList
    RPAREN          shift and go to state 94


state 64

    (86) optionsIO -> ID .
    (87) optionsIO -> ID . , INT
    RPAREN          reduce using rule 86 (optionsIO -> ID .)
    ,               shift and go to state 95


state 65

    (88) optionsIO -> INT .
    (89) optionsIO -> INT . , INT
    RPAREN          reduce using rule 88 (optionsIO -> INT .)
    ,               shift and go to state 96


state 66

    (6) command -> SUBROUTINE ID LPAREN . varlist RPAREN
    (27) varlist -> . variable
    (28) varlist -> . varlist , variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    varlist                        shift and go to state 97
    variable                       shift and go to state 58

state 67

    (25) variable -> ID LPAREN expr . RPAREN
    (26) variable -> ID LPAREN expr . , expr RPAREN
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          shift and go to state 98
    ,               shift and go to state 99
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 68

    (82) readOption -> LPAREN optionsIO . RPAREN
    (83) readOption -> LPAREN optionsIO . RPAREN idList
    RPAREN          shift and go to state 100


state 69

    (44) exprlist -> exprlist , . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 101
    variable                       shift and go to state 38

state 70

    (38) expr -> expr EXPONENT . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 102
    variable                       shift and go to state 38

state 71

    (39) expr -> expr DIVIDE . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 103
    variable                       shift and go to state 38

state 72

    (40) expr -> expr TIMES . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 104
    variable                       shift and go to state 38

state 73

    (41) expr -> expr MINUS . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 105
    variable                       shift and go to state 38

state 74

    (42) expr -> expr PLUS . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 106
    variable                       shift and go to state 38

state 75

    (36) expr -> LPAREN expr . RPAREN
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          shift and go to state 107
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 76

    (37) expr -> MINUS expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    EXPONENT        reduce using rule 37 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 37 (expr -> MINUS expr .)
    TIMES           reduce using rule 37 (expr -> MINUS expr .)
    MINUS           reduce using rule 37 (expr -> MINUS expr .)
    PLUS            reduce using rule 37 (expr -> MINUS expr .)
    ,               reduce using rule 37 (expr -> MINUS expr .)
    INT             reduce using rule 37 (expr -> MINUS expr .)
    WRITE           reduce using rule 37 (expr -> MINUS expr .)
    SUBROUTINE      reduce using rule 37 (expr -> MINUS expr .)
    STOP            reduce using rule 37 (expr -> MINUS expr .)
    RETURN          reduce using rule 37 (expr -> MINUS expr .)
    READ            reduce using rule 37 (expr -> MINUS expr .)
    REAL            reduce using rule 37 (expr -> MINUS expr .)
    PAUSE           reduce using rule 37 (expr -> MINUS expr .)
    INTEGER         reduce using rule 37 (expr -> MINUS expr .)
    IF              reduce using rule 37 (expr -> MINUS expr .)
    GOTO            reduce using rule 37 (expr -> MINUS expr .)
    FUNCTION        reduce using rule 37 (expr -> MINUS expr .)
    FORMAT          reduce using rule 37 (expr -> MINUS expr .)
    END             reduce using rule 37 (expr -> MINUS expr .)
    DO              reduce using rule 37 (expr -> MINUS expr .)
    DIMMENSION      reduce using rule 37 (expr -> MINUS expr .)
    DATA            reduce using rule 37 (expr -> MINUS expr .)
    CONTINUE        reduce using rule 37 (expr -> MINUS expr .)
    CALL            reduce using rule 37 (expr -> MINUS expr .)
    ID              reduce using rule 37 (expr -> MINUS expr .)
    $end            reduce using rule 37 (expr -> MINUS expr .)
    RPAREN          reduce using rule 37 (expr -> MINUS expr .)
    NE              reduce using rule 37 (expr -> MINUS expr .)
    EQ              reduce using rule 37 (expr -> MINUS expr .)
    GE              reduce using rule 37 (expr -> MINUS expr .)
    GT              reduce using rule 37 (expr -> MINUS expr .)
    LE              reduce using rule 37 (expr -> MINUS expr .)
    LT              reduce using rule 37 (expr -> MINUS expr .)
    OR              reduce using rule 37 (expr -> MINUS expr .)
    AND             reduce using rule 37 (expr -> MINUS expr .)


state 77

    (13) command -> IF LPAREN relexpr . RPAREN ifOption
    (47) relexpr -> relexpr . OR relexpr
    (48) relexpr -> relexpr . AND relexpr
    RPAREN          shift and go to state 108
    OR              shift and go to state 109
    AND             shift and go to state 110


state 78

    (45) relexpr -> expr .
    (49) relexpr -> expr . NE expr
    (50) relexpr -> expr . EQ expr
    (51) relexpr -> expr . GE expr
    (52) relexpr -> expr . GT expr
    (53) relexpr -> expr . LE expr
    (54) relexpr -> expr . LT expr
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 45 (relexpr -> expr .)
    OR              reduce using rule 45 (relexpr -> expr .)
    AND             reduce using rule 45 (relexpr -> expr .)
    NE              shift and go to state 111
    EQ              shift and go to state 112
    GE              shift and go to state 113
    GT              shift and go to state 114
    LE              shift and go to state 115
    LT              shift and go to state 116
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 79

    (46) relexpr -> NOT . relexpr
    (45) relexpr -> . expr
    (46) relexpr -> . NOT relexpr
    (47) relexpr -> . relexpr OR relexpr
    (48) relexpr -> . relexpr AND relexpr
    (49) relexpr -> . expr NE expr
    (50) relexpr -> . expr EQ expr
    (51) relexpr -> . expr GE expr
    (52) relexpr -> . expr GT expr
    (53) relexpr -> . expr LE expr
    (54) relexpr -> . expr LT expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    NOT             shift and go to state 79
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    relexpr                        shift and go to state 117
    expr                           shift and go to state 78
    variable                       shift and go to state 38

state 80

    (73) gotoOption -> LPAREN intlist . RPAREN , variable
    (70) intlist -> intlist . , INT
    RPAREN          shift and go to state 118
    ,               shift and go to state 119


state 81

    (69) intlist -> INT .
    RPAREN          reduce using rule 69 (intlist -> INT .)
    ,               reduce using rule 69 (intlist -> INT .)


state 82

    (15) command -> FUNCTION ID LPAREN . varlist RPAREN
    (27) varlist -> . variable
    (28) varlist -> . varlist , variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    varlist                        shift and go to state 120
    variable                       shift and go to state 58

state 83

    (71) doOption -> INT variable . ASSIGN INT , INT
    (72) doOption -> INT variable . ASSIGN INT , INT , INT
    ASSIGN          shift and go to state 121


state 84

    (68) dimmensionOption -> dimmensionOption , . ID LPAREN intlist RPAREN
    ID              shift and go to state 122


state 85

    (67) dimmensionOption -> ID LPAREN . intlist RPAREN
    (69) intlist -> . INT
    (70) intlist -> . intlist , INT
    INT             shift and go to state 81

    intlist                        shift and go to state 123

state 86

    (62) dataOption -> dataOption , . varlist / datalist /
    (27) varlist -> . variable
    (28) varlist -> . varlist , variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    varlist                        shift and go to state 124
    variable                       shift and go to state 58

state 87

    (61) dataOption -> varlist / . datalist /
    (63) datalist -> . number
    (64) datalist -> . INT * number
    (65) datalist -> . datalist , number
    (66) datalist -> . datalist , INT * number
    (29) number -> . MINUS RREAL
    (30) number -> . MINUS INT
    (31) number -> . RREAL
    (32) number -> . INT
    INT             shift and go to state 127
    MINUS           shift and go to state 128
    RREAL           shift and go to state 129

    datalist                       shift and go to state 125
    number                         shift and go to state 126

state 88

    (28) varlist -> varlist , . variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    variable                       shift and go to state 130

state 89

    (55) callOption -> EXIT callExit .
    INT             reduce using rule 55 (callOption -> EXIT callExit .)
    WRITE           reduce using rule 55 (callOption -> EXIT callExit .)
    SUBROUTINE      reduce using rule 55 (callOption -> EXIT callExit .)
    STOP            reduce using rule 55 (callOption -> EXIT callExit .)
    RETURN          reduce using rule 55 (callOption -> EXIT callExit .)
    READ            reduce using rule 55 (callOption -> EXIT callExit .)
    REAL            reduce using rule 55 (callOption -> EXIT callExit .)
    PAUSE           reduce using rule 55 (callOption -> EXIT callExit .)
    INTEGER         reduce using rule 55 (callOption -> EXIT callExit .)
    IF              reduce using rule 55 (callOption -> EXIT callExit .)
    GOTO            reduce using rule 55 (callOption -> EXIT callExit .)
    FUNCTION        reduce using rule 55 (callOption -> EXIT callExit .)
    FORMAT          reduce using rule 55 (callOption -> EXIT callExit .)
    END             reduce using rule 55 (callOption -> EXIT callExit .)
    DO              reduce using rule 55 (callOption -> EXIT callExit .)
    DIMMENSION      reduce using rule 55 (callOption -> EXIT callExit .)
    DATA            reduce using rule 55 (callOption -> EXIT callExit .)
    CONTINUE        reduce using rule 55 (callOption -> EXIT callExit .)
    CALL            reduce using rule 55 (callOption -> EXIT callExit .)
    ID              reduce using rule 55 (callOption -> EXIT callExit .)
    $end            reduce using rule 55 (callOption -> EXIT callExit .)


state 90

    (57) callExit -> empty .
    INT             reduce using rule 57 (callExit -> empty .)
    WRITE           reduce using rule 57 (callExit -> empty .)
    SUBROUTINE      reduce using rule 57 (callExit -> empty .)
    STOP            reduce using rule 57 (callExit -> empty .)
    RETURN          reduce using rule 57 (callExit -> empty .)
    READ            reduce using rule 57 (callExit -> empty .)
    REAL            reduce using rule 57 (callExit -> empty .)
    PAUSE           reduce using rule 57 (callExit -> empty .)
    INTEGER         reduce using rule 57 (callExit -> empty .)
    IF              reduce using rule 57 (callExit -> empty .)
    GOTO            reduce using rule 57 (callExit -> empty .)
    FUNCTION        reduce using rule 57 (callExit -> empty .)
    FORMAT          reduce using rule 57 (callExit -> empty .)
    END             reduce using rule 57 (callExit -> empty .)
    DO              reduce using rule 57 (callExit -> empty .)
    DIMMENSION      reduce using rule 57 (callExit -> empty .)
    DATA            reduce using rule 57 (callExit -> empty .)
    CONTINUE        reduce using rule 57 (callExit -> empty .)
    CALL            reduce using rule 57 (callExit -> empty .)
    ID              reduce using rule 57 (callExit -> empty .)
    $end            reduce using rule 57 (callExit -> empty .)


state 91

    (58) callExit -> LPAREN . INT RPAREN
    INT             shift and go to state 131


state 92

    (56) callOption -> ID LPAREN . idList RPAREN
    (59) idList -> . ID
    (60) idList -> . idList , ID
    ID              shift and go to state 132

    idList                         shift and go to state 133

state 93

    (23) command -> variable ASSIGN expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    INT             reduce using rule 23 (command -> variable ASSIGN expr .)
    WRITE           reduce using rule 23 (command -> variable ASSIGN expr .)
    SUBROUTINE      reduce using rule 23 (command -> variable ASSIGN expr .)
    STOP            reduce using rule 23 (command -> variable ASSIGN expr .)
    RETURN          reduce using rule 23 (command -> variable ASSIGN expr .)
    READ            reduce using rule 23 (command -> variable ASSIGN expr .)
    REAL            reduce using rule 23 (command -> variable ASSIGN expr .)
    PAUSE           reduce using rule 23 (command -> variable ASSIGN expr .)
    INTEGER         reduce using rule 23 (command -> variable ASSIGN expr .)
    IF              reduce using rule 23 (command -> variable ASSIGN expr .)
    GOTO            reduce using rule 23 (command -> variable ASSIGN expr .)
    FUNCTION        reduce using rule 23 (command -> variable ASSIGN expr .)
    FORMAT          reduce using rule 23 (command -> variable ASSIGN expr .)
    END             reduce using rule 23 (command -> variable ASSIGN expr .)
    DO              reduce using rule 23 (command -> variable ASSIGN expr .)
    DIMMENSION      reduce using rule 23 (command -> variable ASSIGN expr .)
    DATA            reduce using rule 23 (command -> variable ASSIGN expr .)
    CONTINUE        reduce using rule 23 (command -> variable ASSIGN expr .)
    CALL            reduce using rule 23 (command -> variable ASSIGN expr .)
    ID              reduce using rule 23 (command -> variable ASSIGN expr .)
    $end            reduce using rule 23 (command -> variable ASSIGN expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 94

    (84) writeOption -> LPAREN optionsIO RPAREN .
    (85) writeOption -> LPAREN optionsIO RPAREN . idList
    (59) idList -> . ID
    (60) idList -> . idList , ID
  ! shift/reduce conflict for ID resolved as shift
    INT             reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    WRITE           reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    SUBROUTINE      reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    STOP            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    RETURN          reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    READ            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    REAL            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    PAUSE           reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    INTEGER         reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    IF              reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    GOTO            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    FUNCTION        reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    FORMAT          reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    END             reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    DO              reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    DIMMENSION      reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    DATA            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    CONTINUE        reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    CALL            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    $end            reduce using rule 84 (writeOption -> LPAREN optionsIO RPAREN .)
    ID              shift and go to state 132

    idList                         shift and go to state 134

state 95

    (87) optionsIO -> ID , . INT
    INT             shift and go to state 135


state 96

    (89) optionsIO -> INT , . INT
    INT             shift and go to state 136


state 97

    (6) command -> SUBROUTINE ID LPAREN varlist . RPAREN
    (28) varlist -> varlist . , variable
    RPAREN          shift and go to state 137
    ,               shift and go to state 88


state 98

    (25) variable -> ID LPAREN expr RPAREN .
    ASSIGN          reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    EXPONENT        reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    TIMES           reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    MINUS           reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    PLUS            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    ,               reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    INT             reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    WRITE           reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    SUBROUTINE      reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    STOP            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    RETURN          reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    READ            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    REAL            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    PAUSE           reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    INTEGER         reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    IF              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    GOTO            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    FUNCTION        reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    FORMAT          reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    END             reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    DO              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    DIMMENSION      reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    DATA            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    CALL            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    ID              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    $end            reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    /               reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    RPAREN          reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    NE              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    EQ              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    GE              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    GT              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    LE              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    LT              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    OR              reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)
    AND             reduce using rule 25 (variable -> ID LPAREN expr RPAREN .)


state 99

    (26) variable -> ID LPAREN expr , . expr RPAREN
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 138
    variable                       shift and go to state 38

state 100

    (82) readOption -> LPAREN optionsIO RPAREN .
    (83) readOption -> LPAREN optionsIO RPAREN . idList
    (59) idList -> . ID
    (60) idList -> . idList , ID
  ! shift/reduce conflict for ID resolved as shift
    INT             reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    WRITE           reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    SUBROUTINE      reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    STOP            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    RETURN          reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    READ            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    REAL            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    PAUSE           reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    INTEGER         reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    IF              reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    GOTO            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    FUNCTION        reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    FORMAT          reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    END             reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    DO              reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    DIMMENSION      reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    DATA            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    CONTINUE        reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    CALL            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    $end            reduce using rule 82 (readOption -> LPAREN optionsIO RPAREN .)
    ID              shift and go to state 132

    idList                         shift and go to state 139

state 101

    (44) exprlist -> exprlist , expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    ,               reduce using rule 44 (exprlist -> exprlist , expr .)
    INT             reduce using rule 44 (exprlist -> exprlist , expr .)
    WRITE           reduce using rule 44 (exprlist -> exprlist , expr .)
    SUBROUTINE      reduce using rule 44 (exprlist -> exprlist , expr .)
    STOP            reduce using rule 44 (exprlist -> exprlist , expr .)
    RETURN          reduce using rule 44 (exprlist -> exprlist , expr .)
    READ            reduce using rule 44 (exprlist -> exprlist , expr .)
    REAL            reduce using rule 44 (exprlist -> exprlist , expr .)
    PAUSE           reduce using rule 44 (exprlist -> exprlist , expr .)
    INTEGER         reduce using rule 44 (exprlist -> exprlist , expr .)
    IF              reduce using rule 44 (exprlist -> exprlist , expr .)
    GOTO            reduce using rule 44 (exprlist -> exprlist , expr .)
    FUNCTION        reduce using rule 44 (exprlist -> exprlist , expr .)
    FORMAT          reduce using rule 44 (exprlist -> exprlist , expr .)
    END             reduce using rule 44 (exprlist -> exprlist , expr .)
    DO              reduce using rule 44 (exprlist -> exprlist , expr .)
    DIMMENSION      reduce using rule 44 (exprlist -> exprlist , expr .)
    DATA            reduce using rule 44 (exprlist -> exprlist , expr .)
    CONTINUE        reduce using rule 44 (exprlist -> exprlist , expr .)
    CALL            reduce using rule 44 (exprlist -> exprlist , expr .)
    ID              reduce using rule 44 (exprlist -> exprlist , expr .)
    $end            reduce using rule 44 (exprlist -> exprlist , expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 102

    (38) expr -> expr EXPONENT expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    EXPONENT        reduce using rule 38 (expr -> expr EXPONENT expr .)
    DIVIDE          reduce using rule 38 (expr -> expr EXPONENT expr .)
    TIMES           reduce using rule 38 (expr -> expr EXPONENT expr .)
    MINUS           reduce using rule 38 (expr -> expr EXPONENT expr .)
    PLUS            reduce using rule 38 (expr -> expr EXPONENT expr .)
    ,               reduce using rule 38 (expr -> expr EXPONENT expr .)
    INT             reduce using rule 38 (expr -> expr EXPONENT expr .)
    WRITE           reduce using rule 38 (expr -> expr EXPONENT expr .)
    SUBROUTINE      reduce using rule 38 (expr -> expr EXPONENT expr .)
    STOP            reduce using rule 38 (expr -> expr EXPONENT expr .)
    RETURN          reduce using rule 38 (expr -> expr EXPONENT expr .)
    READ            reduce using rule 38 (expr -> expr EXPONENT expr .)
    REAL            reduce using rule 38 (expr -> expr EXPONENT expr .)
    PAUSE           reduce using rule 38 (expr -> expr EXPONENT expr .)
    INTEGER         reduce using rule 38 (expr -> expr EXPONENT expr .)
    IF              reduce using rule 38 (expr -> expr EXPONENT expr .)
    GOTO            reduce using rule 38 (expr -> expr EXPONENT expr .)
    FUNCTION        reduce using rule 38 (expr -> expr EXPONENT expr .)
    FORMAT          reduce using rule 38 (expr -> expr EXPONENT expr .)
    END             reduce using rule 38 (expr -> expr EXPONENT expr .)
    DO              reduce using rule 38 (expr -> expr EXPONENT expr .)
    DIMMENSION      reduce using rule 38 (expr -> expr EXPONENT expr .)
    DATA            reduce using rule 38 (expr -> expr EXPONENT expr .)
    CONTINUE        reduce using rule 38 (expr -> expr EXPONENT expr .)
    CALL            reduce using rule 38 (expr -> expr EXPONENT expr .)
    ID              reduce using rule 38 (expr -> expr EXPONENT expr .)
    $end            reduce using rule 38 (expr -> expr EXPONENT expr .)
    RPAREN          reduce using rule 38 (expr -> expr EXPONENT expr .)
    NE              reduce using rule 38 (expr -> expr EXPONENT expr .)
    EQ              reduce using rule 38 (expr -> expr EXPONENT expr .)
    GE              reduce using rule 38 (expr -> expr EXPONENT expr .)
    GT              reduce using rule 38 (expr -> expr EXPONENT expr .)
    LE              reduce using rule 38 (expr -> expr EXPONENT expr .)
    LT              reduce using rule 38 (expr -> expr EXPONENT expr .)
    OR              reduce using rule 38 (expr -> expr EXPONENT expr .)
    AND             reduce using rule 38 (expr -> expr EXPONENT expr .)


state 103

    (39) expr -> expr DIVIDE expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 39 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 39 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 39 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 39 (expr -> expr DIVIDE expr .)
    ,               reduce using rule 39 (expr -> expr DIVIDE expr .)
    INT             reduce using rule 39 (expr -> expr DIVIDE expr .)
    WRITE           reduce using rule 39 (expr -> expr DIVIDE expr .)
    SUBROUTINE      reduce using rule 39 (expr -> expr DIVIDE expr .)
    STOP            reduce using rule 39 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 39 (expr -> expr DIVIDE expr .)
    READ            reduce using rule 39 (expr -> expr DIVIDE expr .)
    REAL            reduce using rule 39 (expr -> expr DIVIDE expr .)
    PAUSE           reduce using rule 39 (expr -> expr DIVIDE expr .)
    INTEGER         reduce using rule 39 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 39 (expr -> expr DIVIDE expr .)
    GOTO            reduce using rule 39 (expr -> expr DIVIDE expr .)
    FUNCTION        reduce using rule 39 (expr -> expr DIVIDE expr .)
    FORMAT          reduce using rule 39 (expr -> expr DIVIDE expr .)
    END             reduce using rule 39 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 39 (expr -> expr DIVIDE expr .)
    DIMMENSION      reduce using rule 39 (expr -> expr DIVIDE expr .)
    DATA            reduce using rule 39 (expr -> expr DIVIDE expr .)
    CONTINUE        reduce using rule 39 (expr -> expr DIVIDE expr .)
    CALL            reduce using rule 39 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 39 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 39 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 39 (expr -> expr DIVIDE expr .)
    NE              reduce using rule 39 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 39 (expr -> expr DIVIDE expr .)
    GE              reduce using rule 39 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 39 (expr -> expr DIVIDE expr .)
    LE              reduce using rule 39 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 39 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 39 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 39 (expr -> expr DIVIDE expr .)
    EXPONENT        shift and go to state 70


state 104

    (40) expr -> expr TIMES expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 40 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 40 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 40 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 40 (expr -> expr TIMES expr .)
    ,               reduce using rule 40 (expr -> expr TIMES expr .)
    INT             reduce using rule 40 (expr -> expr TIMES expr .)
    WRITE           reduce using rule 40 (expr -> expr TIMES expr .)
    SUBROUTINE      reduce using rule 40 (expr -> expr TIMES expr .)
    STOP            reduce using rule 40 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 40 (expr -> expr TIMES expr .)
    READ            reduce using rule 40 (expr -> expr TIMES expr .)
    REAL            reduce using rule 40 (expr -> expr TIMES expr .)
    PAUSE           reduce using rule 40 (expr -> expr TIMES expr .)
    INTEGER         reduce using rule 40 (expr -> expr TIMES expr .)
    IF              reduce using rule 40 (expr -> expr TIMES expr .)
    GOTO            reduce using rule 40 (expr -> expr TIMES expr .)
    FUNCTION        reduce using rule 40 (expr -> expr TIMES expr .)
    FORMAT          reduce using rule 40 (expr -> expr TIMES expr .)
    END             reduce using rule 40 (expr -> expr TIMES expr .)
    DO              reduce using rule 40 (expr -> expr TIMES expr .)
    DIMMENSION      reduce using rule 40 (expr -> expr TIMES expr .)
    DATA            reduce using rule 40 (expr -> expr TIMES expr .)
    CONTINUE        reduce using rule 40 (expr -> expr TIMES expr .)
    CALL            reduce using rule 40 (expr -> expr TIMES expr .)
    ID              reduce using rule 40 (expr -> expr TIMES expr .)
    $end            reduce using rule 40 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 40 (expr -> expr TIMES expr .)
    NE              reduce using rule 40 (expr -> expr TIMES expr .)
    EQ              reduce using rule 40 (expr -> expr TIMES expr .)
    GE              reduce using rule 40 (expr -> expr TIMES expr .)
    GT              reduce using rule 40 (expr -> expr TIMES expr .)
    LE              reduce using rule 40 (expr -> expr TIMES expr .)
    LT              reduce using rule 40 (expr -> expr TIMES expr .)
    OR              reduce using rule 40 (expr -> expr TIMES expr .)
    AND             reduce using rule 40 (expr -> expr TIMES expr .)
    EXPONENT        shift and go to state 70


state 105

    (41) expr -> expr MINUS expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    MINUS           reduce using rule 41 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 41 (expr -> expr MINUS expr .)
    ,               reduce using rule 41 (expr -> expr MINUS expr .)
    INT             reduce using rule 41 (expr -> expr MINUS expr .)
    WRITE           reduce using rule 41 (expr -> expr MINUS expr .)
    SUBROUTINE      reduce using rule 41 (expr -> expr MINUS expr .)
    STOP            reduce using rule 41 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 41 (expr -> expr MINUS expr .)
    READ            reduce using rule 41 (expr -> expr MINUS expr .)
    REAL            reduce using rule 41 (expr -> expr MINUS expr .)
    PAUSE           reduce using rule 41 (expr -> expr MINUS expr .)
    INTEGER         reduce using rule 41 (expr -> expr MINUS expr .)
    IF              reduce using rule 41 (expr -> expr MINUS expr .)
    GOTO            reduce using rule 41 (expr -> expr MINUS expr .)
    FUNCTION        reduce using rule 41 (expr -> expr MINUS expr .)
    FORMAT          reduce using rule 41 (expr -> expr MINUS expr .)
    END             reduce using rule 41 (expr -> expr MINUS expr .)
    DO              reduce using rule 41 (expr -> expr MINUS expr .)
    DIMMENSION      reduce using rule 41 (expr -> expr MINUS expr .)
    DATA            reduce using rule 41 (expr -> expr MINUS expr .)
    CONTINUE        reduce using rule 41 (expr -> expr MINUS expr .)
    CALL            reduce using rule 41 (expr -> expr MINUS expr .)
    ID              reduce using rule 41 (expr -> expr MINUS expr .)
    $end            reduce using rule 41 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 41 (expr -> expr MINUS expr .)
    NE              reduce using rule 41 (expr -> expr MINUS expr .)
    EQ              reduce using rule 41 (expr -> expr MINUS expr .)
    GE              reduce using rule 41 (expr -> expr MINUS expr .)
    GT              reduce using rule 41 (expr -> expr MINUS expr .)
    LE              reduce using rule 41 (expr -> expr MINUS expr .)
    LT              reduce using rule 41 (expr -> expr MINUS expr .)
    OR              reduce using rule 41 (expr -> expr MINUS expr .)
    AND             reduce using rule 41 (expr -> expr MINUS expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72


state 106

    (42) expr -> expr PLUS expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    MINUS           reduce using rule 42 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 42 (expr -> expr PLUS expr .)
    ,               reduce using rule 42 (expr -> expr PLUS expr .)
    INT             reduce using rule 42 (expr -> expr PLUS expr .)
    WRITE           reduce using rule 42 (expr -> expr PLUS expr .)
    SUBROUTINE      reduce using rule 42 (expr -> expr PLUS expr .)
    STOP            reduce using rule 42 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 42 (expr -> expr PLUS expr .)
    READ            reduce using rule 42 (expr -> expr PLUS expr .)
    REAL            reduce using rule 42 (expr -> expr PLUS expr .)
    PAUSE           reduce using rule 42 (expr -> expr PLUS expr .)
    INTEGER         reduce using rule 42 (expr -> expr PLUS expr .)
    IF              reduce using rule 42 (expr -> expr PLUS expr .)
    GOTO            reduce using rule 42 (expr -> expr PLUS expr .)
    FUNCTION        reduce using rule 42 (expr -> expr PLUS expr .)
    FORMAT          reduce using rule 42 (expr -> expr PLUS expr .)
    END             reduce using rule 42 (expr -> expr PLUS expr .)
    DO              reduce using rule 42 (expr -> expr PLUS expr .)
    DIMMENSION      reduce using rule 42 (expr -> expr PLUS expr .)
    DATA            reduce using rule 42 (expr -> expr PLUS expr .)
    CONTINUE        reduce using rule 42 (expr -> expr PLUS expr .)
    CALL            reduce using rule 42 (expr -> expr PLUS expr .)
    ID              reduce using rule 42 (expr -> expr PLUS expr .)
    $end            reduce using rule 42 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 42 (expr -> expr PLUS expr .)
    NE              reduce using rule 42 (expr -> expr PLUS expr .)
    EQ              reduce using rule 42 (expr -> expr PLUS expr .)
    GE              reduce using rule 42 (expr -> expr PLUS expr .)
    GT              reduce using rule 42 (expr -> expr PLUS expr .)
    LE              reduce using rule 42 (expr -> expr PLUS expr .)
    LT              reduce using rule 42 (expr -> expr PLUS expr .)
    OR              reduce using rule 42 (expr -> expr PLUS expr .)
    AND             reduce using rule 42 (expr -> expr PLUS expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72


state 107

    (36) expr -> LPAREN expr RPAREN .
    EXPONENT        reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    ,               reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    INT             reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    WRITE           reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    SUBROUTINE      reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    STOP            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    READ            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    REAL            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    PAUSE           reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    INTEGER         reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    GOTO            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    FUNCTION        reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    FORMAT          reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    DIMMENSION      reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    DATA            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    CALL            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    NE              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    GE              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    LE              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 36 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 36 (expr -> LPAREN expr RPAREN .)


state 108

    (13) command -> IF LPAREN relexpr RPAREN . ifOption
    (75) ifOption -> . ifValue , ifValue , ifValue
    (76) ifValue -> . ID
    (77) ifValue -> . INT
    ID              shift and go to state 142
    INT             shift and go to state 143

    ifOption                       shift and go to state 140
    ifValue                        shift and go to state 141

state 109

    (47) relexpr -> relexpr OR . relexpr
    (45) relexpr -> . expr
    (46) relexpr -> . NOT relexpr
    (47) relexpr -> . relexpr OR relexpr
    (48) relexpr -> . relexpr AND relexpr
    (49) relexpr -> . expr NE expr
    (50) relexpr -> . expr EQ expr
    (51) relexpr -> . expr GE expr
    (52) relexpr -> . expr GT expr
    (53) relexpr -> . expr LE expr
    (54) relexpr -> . expr LT expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    NOT             shift and go to state 79
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    relexpr                        shift and go to state 144
    expr                           shift and go to state 78
    variable                       shift and go to state 38

state 110

    (48) relexpr -> relexpr AND . relexpr
    (45) relexpr -> . expr
    (46) relexpr -> . NOT relexpr
    (47) relexpr -> . relexpr OR relexpr
    (48) relexpr -> . relexpr AND relexpr
    (49) relexpr -> . expr NE expr
    (50) relexpr -> . expr EQ expr
    (51) relexpr -> . expr GE expr
    (52) relexpr -> . expr GT expr
    (53) relexpr -> . expr LE expr
    (54) relexpr -> . expr LT expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    NOT             shift and go to state 79
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    relexpr                        shift and go to state 145
    expr                           shift and go to state 78
    variable                       shift and go to state 38

state 111

    (49) relexpr -> expr NE . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 146
    variable                       shift and go to state 38

state 112

    (50) relexpr -> expr EQ . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 147
    variable                       shift and go to state 38

state 113

    (51) relexpr -> expr GE . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 148
    variable                       shift and go to state 38

state 114

    (52) relexpr -> expr GT . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 149
    variable                       shift and go to state 38

state 115

    (53) relexpr -> expr LE . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 150
    variable                       shift and go to state 38

state 116

    (54) relexpr -> expr LT . expr
    (33) expr -> . variable
    (34) expr -> . RREAL
    (35) expr -> . INT
    (36) expr -> . LPAREN expr RPAREN
    (37) expr -> . MINUS expr
    (38) expr -> . expr EXPONENT expr
    (39) expr -> . expr DIVIDE expr
    (40) expr -> . expr TIMES expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr PLUS expr
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    RREAL           shift and go to state 39
    INT             shift and go to state 40
    LPAREN          shift and go to state 41
    MINUS           shift and go to state 42
    ID              shift and go to state 7

    expr                           shift and go to state 151
    variable                       shift and go to state 38

state 117

    (46) relexpr -> NOT relexpr .
    (47) relexpr -> relexpr . OR relexpr
    (48) relexpr -> relexpr . AND relexpr
    RPAREN          reduce using rule 46 (relexpr -> NOT relexpr .)
    OR              shift and go to state 109
    AND             shift and go to state 110


state 118

    (73) gotoOption -> LPAREN intlist RPAREN . , variable
    ,               shift and go to state 152


state 119

    (70) intlist -> intlist , . INT
    INT             shift and go to state 153


state 120

    (15) command -> FUNCTION ID LPAREN varlist . RPAREN
    (28) varlist -> varlist . , variable
    RPAREN          shift and go to state 154
    ,               shift and go to state 88


state 121

    (71) doOption -> INT variable ASSIGN . INT , INT
    (72) doOption -> INT variable ASSIGN . INT , INT , INT
    INT             shift and go to state 155


state 122

    (68) dimmensionOption -> dimmensionOption , ID . LPAREN intlist RPAREN
    LPAREN          shift and go to state 156


state 123

    (67) dimmensionOption -> ID LPAREN intlist . RPAREN
    (70) intlist -> intlist . , INT
    RPAREN          shift and go to state 157
    ,               shift and go to state 119


state 124

    (62) dataOption -> dataOption , varlist . / datalist /
    (28) varlist -> varlist . , variable
    /               shift and go to state 158
    ,               shift and go to state 88


state 125

    (61) dataOption -> varlist / datalist . /
    (65) datalist -> datalist . , number
    (66) datalist -> datalist . , INT * number
    /               shift and go to state 159
    ,               shift and go to state 160


state 126

    (63) datalist -> number .
    /               reduce using rule 63 (datalist -> number .)
    ,               reduce using rule 63 (datalist -> number .)


state 127

    (64) datalist -> INT . * number
    (32) number -> INT .
    *               shift and go to state 161
    /               reduce using rule 32 (number -> INT .)
    ,               reduce using rule 32 (number -> INT .)


state 128

    (29) number -> MINUS . RREAL
    (30) number -> MINUS . INT
    RREAL           shift and go to state 162
    INT             shift and go to state 163


state 129

    (31) number -> RREAL .
    /               reduce using rule 31 (number -> RREAL .)
    ,               reduce using rule 31 (number -> RREAL .)


state 130

    (28) varlist -> varlist , variable .
    /               reduce using rule 28 (varlist -> varlist , variable .)
    ,               reduce using rule 28 (varlist -> varlist , variable .)
    RPAREN          reduce using rule 28 (varlist -> varlist , variable .)


state 131

    (58) callExit -> LPAREN INT . RPAREN
    RPAREN          shift and go to state 164


state 132

    (59) idList -> ID .
    RPAREN          reduce using rule 59 (idList -> ID .)
    ,               reduce using rule 59 (idList -> ID .)
    INT             reduce using rule 59 (idList -> ID .)
    WRITE           reduce using rule 59 (idList -> ID .)
    SUBROUTINE      reduce using rule 59 (idList -> ID .)
    STOP            reduce using rule 59 (idList -> ID .)
    RETURN          reduce using rule 59 (idList -> ID .)
    READ            reduce using rule 59 (idList -> ID .)
    REAL            reduce using rule 59 (idList -> ID .)
    PAUSE           reduce using rule 59 (idList -> ID .)
    INTEGER         reduce using rule 59 (idList -> ID .)
    IF              reduce using rule 59 (idList -> ID .)
    GOTO            reduce using rule 59 (idList -> ID .)
    FUNCTION        reduce using rule 59 (idList -> ID .)
    FORMAT          reduce using rule 59 (idList -> ID .)
    END             reduce using rule 59 (idList -> ID .)
    DO              reduce using rule 59 (idList -> ID .)
    DIMMENSION      reduce using rule 59 (idList -> ID .)
    DATA            reduce using rule 59 (idList -> ID .)
    CONTINUE        reduce using rule 59 (idList -> ID .)
    CALL            reduce using rule 59 (idList -> ID .)
    ID              reduce using rule 59 (idList -> ID .)
    $end            reduce using rule 59 (idList -> ID .)


state 133

    (56) callOption -> ID LPAREN idList . RPAREN
    (60) idList -> idList . , ID
    RPAREN          shift and go to state 165
    ,               shift and go to state 166


state 134

    (85) writeOption -> LPAREN optionsIO RPAREN idList .
    (60) idList -> idList . , ID
    INT             reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    WRITE           reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    SUBROUTINE      reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    STOP            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    RETURN          reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    READ            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    REAL            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    PAUSE           reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    INTEGER         reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    IF              reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    GOTO            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    FUNCTION        reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    FORMAT          reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    END             reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    DO              reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    DIMMENSION      reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    DATA            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    CONTINUE        reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    CALL            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    ID              reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    $end            reduce using rule 85 (writeOption -> LPAREN optionsIO RPAREN idList .)
    ,               shift and go to state 166


state 135

    (87) optionsIO -> ID , INT .
    RPAREN          reduce using rule 87 (optionsIO -> ID , INT .)


state 136

    (89) optionsIO -> INT , INT .
    RPAREN          reduce using rule 89 (optionsIO -> INT , INT .)


state 137

    (6) command -> SUBROUTINE ID LPAREN varlist RPAREN .
    INT             reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    WRITE           reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    SUBROUTINE      reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    STOP            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    RETURN          reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    READ            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    REAL            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    PAUSE           reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    INTEGER         reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    IF              reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    GOTO            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    FUNCTION        reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    FORMAT          reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    END             reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    DO              reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    DIMMENSION      reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    DATA            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    CONTINUE        reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    CALL            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    ID              reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)
    $end            reduce using rule 6 (command -> SUBROUTINE ID LPAREN varlist RPAREN .)


state 138

    (26) variable -> ID LPAREN expr , expr . RPAREN
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          shift and go to state 167
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 139

    (83) readOption -> LPAREN optionsIO RPAREN idList .
    (60) idList -> idList . , ID
    INT             reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    WRITE           reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    SUBROUTINE      reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    STOP            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    RETURN          reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    READ            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    REAL            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    PAUSE           reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    INTEGER         reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    IF              reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    GOTO            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    FUNCTION        reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    FORMAT          reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    END             reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    DO              reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    DIMMENSION      reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    DATA            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    CONTINUE        reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    CALL            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    ID              reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    $end            reduce using rule 83 (readOption -> LPAREN optionsIO RPAREN idList .)
    ,               shift and go to state 166


state 140

    (13) command -> IF LPAREN relexpr RPAREN ifOption .
    INT             reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    WRITE           reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    SUBROUTINE      reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    STOP            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    RETURN          reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    READ            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    REAL            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    PAUSE           reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    INTEGER         reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    IF              reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    GOTO            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    FUNCTION        reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    FORMAT          reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    END             reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    DO              reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    DIMMENSION      reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    DATA            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    CONTINUE        reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    CALL            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    ID              reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)
    $end            reduce using rule 13 (command -> IF LPAREN relexpr RPAREN ifOption .)


state 141

    (75) ifOption -> ifValue . , ifValue , ifValue
    ,               shift and go to state 168


state 142

    (76) ifValue -> ID .
    ,               reduce using rule 76 (ifValue -> ID .)
    INT             reduce using rule 76 (ifValue -> ID .)
    WRITE           reduce using rule 76 (ifValue -> ID .)
    SUBROUTINE      reduce using rule 76 (ifValue -> ID .)
    STOP            reduce using rule 76 (ifValue -> ID .)
    RETURN          reduce using rule 76 (ifValue -> ID .)
    READ            reduce using rule 76 (ifValue -> ID .)
    REAL            reduce using rule 76 (ifValue -> ID .)
    PAUSE           reduce using rule 76 (ifValue -> ID .)
    INTEGER         reduce using rule 76 (ifValue -> ID .)
    IF              reduce using rule 76 (ifValue -> ID .)
    GOTO            reduce using rule 76 (ifValue -> ID .)
    FUNCTION        reduce using rule 76 (ifValue -> ID .)
    FORMAT          reduce using rule 76 (ifValue -> ID .)
    END             reduce using rule 76 (ifValue -> ID .)
    DO              reduce using rule 76 (ifValue -> ID .)
    DIMMENSION      reduce using rule 76 (ifValue -> ID .)
    DATA            reduce using rule 76 (ifValue -> ID .)
    CONTINUE        reduce using rule 76 (ifValue -> ID .)
    CALL            reduce using rule 76 (ifValue -> ID .)
    ID              reduce using rule 76 (ifValue -> ID .)
    $end            reduce using rule 76 (ifValue -> ID .)


state 143

    (77) ifValue -> INT .
    ,               reduce using rule 77 (ifValue -> INT .)
    INT             reduce using rule 77 (ifValue -> INT .)
    WRITE           reduce using rule 77 (ifValue -> INT .)
    SUBROUTINE      reduce using rule 77 (ifValue -> INT .)
    STOP            reduce using rule 77 (ifValue -> INT .)
    RETURN          reduce using rule 77 (ifValue -> INT .)
    READ            reduce using rule 77 (ifValue -> INT .)
    REAL            reduce using rule 77 (ifValue -> INT .)
    PAUSE           reduce using rule 77 (ifValue -> INT .)
    INTEGER         reduce using rule 77 (ifValue -> INT .)
    IF              reduce using rule 77 (ifValue -> INT .)
    GOTO            reduce using rule 77 (ifValue -> INT .)
    FUNCTION        reduce using rule 77 (ifValue -> INT .)
    FORMAT          reduce using rule 77 (ifValue -> INT .)
    END             reduce using rule 77 (ifValue -> INT .)
    DO              reduce using rule 77 (ifValue -> INT .)
    DIMMENSION      reduce using rule 77 (ifValue -> INT .)
    DATA            reduce using rule 77 (ifValue -> INT .)
    CONTINUE        reduce using rule 77 (ifValue -> INT .)
    CALL            reduce using rule 77 (ifValue -> INT .)
    ID              reduce using rule 77 (ifValue -> INT .)
    $end            reduce using rule 77 (ifValue -> INT .)


state 144

    (47) relexpr -> relexpr OR relexpr .
    (47) relexpr -> relexpr . OR relexpr
    (48) relexpr -> relexpr . AND relexpr
    RPAREN          reduce using rule 47 (relexpr -> relexpr OR relexpr .)
    OR              reduce using rule 47 (relexpr -> relexpr OR relexpr .)
    AND             reduce using rule 47 (relexpr -> relexpr OR relexpr .)


state 145

    (48) relexpr -> relexpr AND relexpr .
    (47) relexpr -> relexpr . OR relexpr
    (48) relexpr -> relexpr . AND relexpr
    RPAREN          reduce using rule 48 (relexpr -> relexpr AND relexpr .)
    OR              reduce using rule 48 (relexpr -> relexpr AND relexpr .)
    AND             reduce using rule 48 (relexpr -> relexpr AND relexpr .)


state 146

    (49) relexpr -> expr NE expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 49 (relexpr -> expr NE expr .)
    OR              reduce using rule 49 (relexpr -> expr NE expr .)
    AND             reduce using rule 49 (relexpr -> expr NE expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 147

    (50) relexpr -> expr EQ expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 50 (relexpr -> expr EQ expr .)
    OR              reduce using rule 50 (relexpr -> expr EQ expr .)
    AND             reduce using rule 50 (relexpr -> expr EQ expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 148

    (51) relexpr -> expr GE expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 51 (relexpr -> expr GE expr .)
    OR              reduce using rule 51 (relexpr -> expr GE expr .)
    AND             reduce using rule 51 (relexpr -> expr GE expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 149

    (52) relexpr -> expr GT expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 52 (relexpr -> expr GT expr .)
    OR              reduce using rule 52 (relexpr -> expr GT expr .)
    AND             reduce using rule 52 (relexpr -> expr GT expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 150

    (53) relexpr -> expr LE expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 53 (relexpr -> expr LE expr .)
    OR              reduce using rule 53 (relexpr -> expr LE expr .)
    AND             reduce using rule 53 (relexpr -> expr LE expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 151

    (54) relexpr -> expr LT expr .
    (38) expr -> expr . EXPONENT expr
    (39) expr -> expr . DIVIDE expr
    (40) expr -> expr . TIMES expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . PLUS expr
    RPAREN          reduce using rule 54 (relexpr -> expr LT expr .)
    OR              reduce using rule 54 (relexpr -> expr LT expr .)
    AND             reduce using rule 54 (relexpr -> expr LT expr .)
    EXPONENT        shift and go to state 70
    DIVIDE          shift and go to state 71
    TIMES           shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74


state 152

    (73) gotoOption -> LPAREN intlist RPAREN , . variable
    (24) variable -> . ID
    (25) variable -> . ID LPAREN expr RPAREN
    (26) variable -> . ID LPAREN expr , expr RPAREN
    ID              shift and go to state 7

    variable                       shift and go to state 169

state 153

    (70) intlist -> intlist , INT .
    RPAREN          reduce using rule 70 (intlist -> intlist , INT .)
    ,               reduce using rule 70 (intlist -> intlist , INT .)


state 154

    (15) command -> FUNCTION ID LPAREN varlist RPAREN .
    INT             reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    WRITE           reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    SUBROUTINE      reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    STOP            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    RETURN          reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    READ            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    REAL            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    PAUSE           reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    INTEGER         reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    IF              reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    GOTO            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    FUNCTION        reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    FORMAT          reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    END             reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    DO              reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    DIMMENSION      reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    DATA            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    CONTINUE        reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    CALL            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    ID              reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)
    $end            reduce using rule 15 (command -> FUNCTION ID LPAREN varlist RPAREN .)


state 155

    (71) doOption -> INT variable ASSIGN INT . , INT
    (72) doOption -> INT variable ASSIGN INT . , INT , INT
    ,               shift and go to state 170


state 156

    (68) dimmensionOption -> dimmensionOption , ID LPAREN . intlist RPAREN
    (69) intlist -> . INT
    (70) intlist -> . intlist , INT
    INT             shift and go to state 81

    intlist                        shift and go to state 171

state 157

    (67) dimmensionOption -> ID LPAREN intlist RPAREN .
    ,               reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    INT             reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    WRITE           reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    SUBROUTINE      reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    STOP            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    RETURN          reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    READ            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    REAL            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    PAUSE           reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    INTEGER         reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    IF              reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    GOTO            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    FUNCTION        reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    FORMAT          reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    END             reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    DO              reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    DIMMENSION      reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    DATA            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    CONTINUE        reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    CALL            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    ID              reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)
    $end            reduce using rule 67 (dimmensionOption -> ID LPAREN intlist RPAREN .)


state 158

    (62) dataOption -> dataOption , varlist / . datalist /
    (63) datalist -> . number
    (64) datalist -> . INT * number
    (65) datalist -> . datalist , number
    (66) datalist -> . datalist , INT * number
    (29) number -> . MINUS RREAL
    (30) number -> . MINUS INT
    (31) number -> . RREAL
    (32) number -> . INT
    INT             shift and go to state 127
    MINUS           shift and go to state 128
    RREAL           shift and go to state 129

    datalist                       shift and go to state 172
    number                         shift and go to state 126

state 159

    (61) dataOption -> varlist / datalist / .
    ,               reduce using rule 61 (dataOption -> varlist / datalist / .)
    INT             reduce using rule 61 (dataOption -> varlist / datalist / .)
    WRITE           reduce using rule 61 (dataOption -> varlist / datalist / .)
    SUBROUTINE      reduce using rule 61 (dataOption -> varlist / datalist / .)
    STOP            reduce using rule 61 (dataOption -> varlist / datalist / .)
    RETURN          reduce using rule 61 (dataOption -> varlist / datalist / .)
    READ            reduce using rule 61 (dataOption -> varlist / datalist / .)
    REAL            reduce using rule 61 (dataOption -> varlist / datalist / .)
    PAUSE           reduce using rule 61 (dataOption -> varlist / datalist / .)
    INTEGER         reduce using rule 61 (dataOption -> varlist / datalist / .)
    IF              reduce using rule 61 (dataOption -> varlist / datalist / .)
    GOTO            reduce using rule 61 (dataOption -> varlist / datalist / .)
    FUNCTION        reduce using rule 61 (dataOption -> varlist / datalist / .)
    FORMAT          reduce using rule 61 (dataOption -> varlist / datalist / .)
    END             reduce using rule 61 (dataOption -> varlist / datalist / .)
    DO              reduce using rule 61 (dataOption -> varlist / datalist / .)
    DIMMENSION      reduce using rule 61 (dataOption -> varlist / datalist / .)
    DATA            reduce using rule 61 (dataOption -> varlist / datalist / .)
    CONTINUE        reduce using rule 61 (dataOption -> varlist / datalist / .)
    CALL            reduce using rule 61 (dataOption -> varlist / datalist / .)
    ID              reduce using rule 61 (dataOption -> varlist / datalist / .)
    $end            reduce using rule 61 (dataOption -> varlist / datalist / .)


state 160

    (65) datalist -> datalist , . number
    (66) datalist -> datalist , . INT * number
    (29) number -> . MINUS RREAL
    (30) number -> . MINUS INT
    (31) number -> . RREAL
    (32) number -> . INT
    INT             shift and go to state 174
    MINUS           shift and go to state 128
    RREAL           shift and go to state 129

    number                         shift and go to state 173

state 161

    (64) datalist -> INT * . number
    (29) number -> . MINUS RREAL
    (30) number -> . MINUS INT
    (31) number -> . RREAL
    (32) number -> . INT
    MINUS           shift and go to state 128
    RREAL           shift and go to state 129
    INT             shift and go to state 175

    number                         shift and go to state 176

state 162

    (29) number -> MINUS RREAL .
    /               reduce using rule 29 (number -> MINUS RREAL .)
    ,               reduce using rule 29 (number -> MINUS RREAL .)


state 163

    (30) number -> MINUS INT .
    /               reduce using rule 30 (number -> MINUS INT .)
    ,               reduce using rule 30 (number -> MINUS INT .)


state 164

    (58) callExit -> LPAREN INT RPAREN .
    INT             reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    WRITE           reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    SUBROUTINE      reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    STOP            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    RETURN          reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    READ            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    REAL            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    PAUSE           reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    INTEGER         reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    IF              reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    GOTO            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    FUNCTION        reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    FORMAT          reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    END             reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    DO              reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    DIMMENSION      reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    DATA            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    CONTINUE        reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    CALL            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    ID              reduce using rule 58 (callExit -> LPAREN INT RPAREN .)
    $end            reduce using rule 58 (callExit -> LPAREN INT RPAREN .)


state 165

    (56) callOption -> ID LPAREN idList RPAREN .
    INT             reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    WRITE           reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    SUBROUTINE      reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    STOP            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    RETURN          reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    READ            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    REAL            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    PAUSE           reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    INTEGER         reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    IF              reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    GOTO            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    FUNCTION        reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    FORMAT          reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    END             reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    DO              reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    DIMMENSION      reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    DATA            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    CONTINUE        reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    CALL            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    ID              reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)
    $end            reduce using rule 56 (callOption -> ID LPAREN idList RPAREN .)


state 166

    (60) idList -> idList , . ID
    ID              shift and go to state 177


state 167

    (26) variable -> ID LPAREN expr , expr RPAREN .
    ASSIGN          reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    EXPONENT        reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    DIVIDE          reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    TIMES           reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    MINUS           reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    PLUS            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    ,               reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    INT             reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    WRITE           reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    SUBROUTINE      reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    STOP            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    RETURN          reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    READ            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    REAL            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    PAUSE           reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    INTEGER         reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    IF              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    GOTO            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    FUNCTION        reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    FORMAT          reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    END             reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    DO              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    DIMMENSION      reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    DATA            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    CONTINUE        reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    CALL            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    ID              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    $end            reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    /               reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    RPAREN          reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    NE              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    EQ              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    GE              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    GT              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    LE              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    LT              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    OR              reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)
    AND             reduce using rule 26 (variable -> ID LPAREN expr , expr RPAREN .)


state 168

    (75) ifOption -> ifValue , . ifValue , ifValue
    (76) ifValue -> . ID
    (77) ifValue -> . INT
    ID              shift and go to state 142
    INT             shift and go to state 143

    ifValue                        shift and go to state 178

state 169

    (73) gotoOption -> LPAREN intlist RPAREN , variable .
    INT             reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    WRITE           reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    SUBROUTINE      reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    STOP            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    RETURN          reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    READ            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    REAL            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    PAUSE           reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    INTEGER         reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    IF              reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    GOTO            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    FUNCTION        reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    FORMAT          reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    END             reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    DO              reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    DIMMENSION      reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    DATA            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    CONTINUE        reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    CALL            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    ID              reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)
    $end            reduce using rule 73 (gotoOption -> LPAREN intlist RPAREN , variable .)


state 170

    (71) doOption -> INT variable ASSIGN INT , . INT
    (72) doOption -> INT variable ASSIGN INT , . INT , INT
    INT             shift and go to state 179


state 171

    (68) dimmensionOption -> dimmensionOption , ID LPAREN intlist . RPAREN
    (70) intlist -> intlist . , INT
    RPAREN          shift and go to state 180
    ,               shift and go to state 119


state 172

    (62) dataOption -> dataOption , varlist / datalist . /
    (65) datalist -> datalist . , number
    (66) datalist -> datalist . , INT * number
    /               shift and go to state 181
    ,               shift and go to state 160


state 173

    (65) datalist -> datalist , number .
    /               reduce using rule 65 (datalist -> datalist , number .)
    ,               reduce using rule 65 (datalist -> datalist , number .)


state 174

    (66) datalist -> datalist , INT . * number
    (32) number -> INT .
    *               shift and go to state 182
    /               reduce using rule 32 (number -> INT .)
    ,               reduce using rule 32 (number -> INT .)


state 175

    (32) number -> INT .
    /               reduce using rule 32 (number -> INT .)
    ,               reduce using rule 32 (number -> INT .)


state 176

    (64) datalist -> INT * number .
    /               reduce using rule 64 (datalist -> INT * number .)
    ,               reduce using rule 64 (datalist -> INT * number .)


state 177

    (60) idList -> idList , ID .
    RPAREN          reduce using rule 60 (idList -> idList , ID .)
    ,               reduce using rule 60 (idList -> idList , ID .)
    INT             reduce using rule 60 (idList -> idList , ID .)
    WRITE           reduce using rule 60 (idList -> idList , ID .)
    SUBROUTINE      reduce using rule 60 (idList -> idList , ID .)
    STOP            reduce using rule 60 (idList -> idList , ID .)
    RETURN          reduce using rule 60 (idList -> idList , ID .)
    READ            reduce using rule 60 (idList -> idList , ID .)
    REAL            reduce using rule 60 (idList -> idList , ID .)
    PAUSE           reduce using rule 60 (idList -> idList , ID .)
    INTEGER         reduce using rule 60 (idList -> idList , ID .)
    IF              reduce using rule 60 (idList -> idList , ID .)
    GOTO            reduce using rule 60 (idList -> idList , ID .)
    FUNCTION        reduce using rule 60 (idList -> idList , ID .)
    FORMAT          reduce using rule 60 (idList -> idList , ID .)
    END             reduce using rule 60 (idList -> idList , ID .)
    DO              reduce using rule 60 (idList -> idList , ID .)
    DIMMENSION      reduce using rule 60 (idList -> idList , ID .)
    DATA            reduce using rule 60 (idList -> idList , ID .)
    CONTINUE        reduce using rule 60 (idList -> idList , ID .)
    CALL            reduce using rule 60 (idList -> idList , ID .)
    ID              reduce using rule 60 (idList -> idList , ID .)
    $end            reduce using rule 60 (idList -> idList , ID .)


state 178

    (75) ifOption -> ifValue , ifValue . , ifValue
    ,               shift and go to state 183


state 179

    (71) doOption -> INT variable ASSIGN INT , INT .
    (72) doOption -> INT variable ASSIGN INT , INT . , INT
    INT             reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    WRITE           reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    SUBROUTINE      reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    STOP            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    RETURN          reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    READ            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    REAL            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    PAUSE           reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    INTEGER         reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    IF              reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    GOTO            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    FUNCTION        reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    FORMAT          reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    END             reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    DO              reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    DIMMENSION      reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    DATA            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    CONTINUE        reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    CALL            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    ID              reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    $end            reduce using rule 71 (doOption -> INT variable ASSIGN INT , INT .)
    ,               shift and go to state 184


state 180

    (68) dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .
    ,               reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    INT             reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    WRITE           reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    SUBROUTINE      reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    STOP            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    RETURN          reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    READ            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    REAL            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    PAUSE           reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    INTEGER         reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    IF              reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    GOTO            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    FUNCTION        reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    FORMAT          reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    END             reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    DO              reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    DIMMENSION      reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    DATA            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    CONTINUE        reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    CALL            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    ID              reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)
    $end            reduce using rule 68 (dimmensionOption -> dimmensionOption , ID LPAREN intlist RPAREN .)


state 181

    (62) dataOption -> dataOption , varlist / datalist / .
    ,               reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    INT             reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    WRITE           reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    SUBROUTINE      reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    STOP            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    RETURN          reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    READ            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    REAL            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    PAUSE           reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    INTEGER         reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    IF              reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    GOTO            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    FUNCTION        reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    FORMAT          reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    END             reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    DO              reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    DIMMENSION      reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    DATA            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    CONTINUE        reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    CALL            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    ID              reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)
    $end            reduce using rule 62 (dataOption -> dataOption , varlist / datalist / .)


state 182

    (66) datalist -> datalist , INT * . number
    (29) number -> . MINUS RREAL
    (30) number -> . MINUS INT
    (31) number -> . RREAL
    (32) number -> . INT
    MINUS           shift and go to state 128
    RREAL           shift and go to state 129
    INT             shift and go to state 175

    number                         shift and go to state 185

state 183

    (75) ifOption -> ifValue , ifValue , . ifValue
    (76) ifValue -> . ID
    (77) ifValue -> . INT
    ID              shift and go to state 142
    INT             shift and go to state 143

    ifValue                        shift and go to state 186

state 184

    (72) doOption -> INT variable ASSIGN INT , INT , . INT
    INT             shift and go to state 187


state 185

    (66) datalist -> datalist , INT * number .
    /               reduce using rule 66 (datalist -> datalist , INT * number .)
    ,               reduce using rule 66 (datalist -> datalist , INT * number .)


state 186

    (75) ifOption -> ifValue , ifValue , ifValue .
    INT             reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    WRITE           reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    SUBROUTINE      reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    STOP            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    RETURN          reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    READ            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    REAL            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    PAUSE           reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    INTEGER         reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    IF              reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    GOTO            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    FUNCTION        reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    FORMAT          reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    END             reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    DO              reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    DIMMENSION      reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    DATA            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    CONTINUE        reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    CALL            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    ID              reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)
    $end            reduce using rule 75 (ifOption -> ifValue , ifValue , ifValue .)


state 187

    (72) doOption -> INT variable ASSIGN INT , INT , INT .
    INT             reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    WRITE           reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    SUBROUTINE      reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    STOP            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    RETURN          reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    READ            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    REAL            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    PAUSE           reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    INTEGER         reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    IF              reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    GOTO            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    FUNCTION        reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    FORMAT          reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    END             reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    DO              reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    DIMMENSION      reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    DATA            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    CONTINUE        reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    CALL            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    ID              reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)
    $end            reduce using rule 72 (doOption -> INT variable ASSIGN INT , INT , INT .)


Conflicts:

shift/reduce conflict for INT in state 8 resolved as shift
shift/reduce conflict for INT in state 12 resolved as shift
shift/reduce conflict for ID in state 94 resolved as shift
shift/reduce conflict for ID in state 100 resolved as shift